openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /sessioninfo:
    get:
      summary: Secure Api
      operationId: secure_api_sessioninfo_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /task/:
    get:
      tags:
      - tasks
      summary: List Tasks
      operationId: list_tasks_task__get
      responses:
        '200':
          description: Get all tasks
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskModel'
                type: array
                title: Response List Tasks Task  Get
    post:
      tags:
      - tasks
      summary: Create Task
      operationId: create_task_task__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskModel'
        required: true
      responses:
        '200':
          description: Create a new task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /task/{id}:
    get:
      tags:
      - tasks
      summary: Show Task
      operationId: show_task_task__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      responses:
        '200':
          description: Get a single task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - tasks
      summary: Update Task
      operationId: update_task_task__id__put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskModel'
      responses:
        '200':
          description: Update a task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - tasks
      summary: Delete Task
      operationId: delete_task_task__id__delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      responses:
        '200':
          description: Delete a task
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /block/blocks:
    get:
      tags:
      - blocks
      summary: Get Blocks By Date
      operationId: get_blocks_by_date_block_blocks_get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Date'
        required: true
      responses:
        '200':
          description: Get all blocks for a given date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockCollection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - blocks
      summary: Create Block
      operationId: create_block_block_blocks_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockModel'
        required: true
      responses:
        '200':
          description: Create a new block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /block/blocks/{block_id}:
    put:
      tags:
      - blocks
      summary: Update Block
      operationId: update_block_block_blocks__block_id__put
      parameters:
      - name: block_id
        in: path
        required: true
        schema:
          type: string
          title: Block Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlockModel'
      responses:
        '200':
          description: Update a block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - blocks
      summary: Delete Block
      operationId: delete_block_block_blocks__block_id__delete
      parameters:
      - name: block_id
        in: path
        required: true
        schema:
          type: string
          title: Block Id
      responses:
        '200':
          description: Delete a block
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - blocks
      summary: Get Block
      operationId: get_block_block_blocks__block_id__get
      parameters:
      - name: block_id
        in: path
        required: true
        schema:
          type: string
          title: Block Id
      responses:
        '200':
          description: Get a single block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /block/all_blocks:
    get:
      tags:
      - blocks
      summary: Get Blocks
      operationId: get_blocks_block_all_blocks_get
      parameters:
      - name: block_id
        in: query
        required: true
        schema:
          type: string
          title: Block Id
      responses:
        '200':
          description: Get all blocks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockCollection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    BlockCollection:
      properties:
        blocks:
          items:
            $ref: '#/components/schemas/BlockModel'
          type: array
          title: Blocks
      type: object
      required:
      - blocks
      title: BlockCollection
      example:
        blocks:
        - content: This is the content of the block
          metadata:
            created_at: '2021-01-01T00:00:00.000000'
            description: This block describes a task
            tags:
            - tag1
            - tag2
            type: task
    BlockModel:
      properties:
        _id:
          type: string
          format: uuid
          title: ' Id'
        content:
          type: string
          title: Content
        created_at:
          type: string
          format: date-time
          title: Created At
        metadata:
          type: object
          title: Metadata
      type: object
      required:
      - content
      title: BlockModel
      example:
        content: This is the content of the block
        metadata:
          created_at: '2021-01-01T00:00:00.000000'
          description: This block describes a task
          tags:
          - tag1
          - tag2
          type: task
    Date:
      properties:
        date:
          type: string
          format: date-time
          title: Date
      type: object
      required:
      - date
      title: Date
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    TaskModel:
      properties:
        _id:
          type: string
          format: uuid
          title: ' Id'
        name:
          type: string
          title: Name
        goal:
          type: string
          title: Goal
        completed:
          type: boolean
          title: Completed
      type: object
      required:
      - name
      - goal
      - completed
      title: TaskModel
      example:
        completed: true
        goal: Why are we doing it?
        name: An informative task title
    UpdateBlockModel:
      properties:
        content:
          type: string
          title: Content
        metadata:
          type: object
          title: Metadata
      type: object
      title: UpdateBlockModel
      example:
        content: This is the content of the block
        metadata:
          created_at: '2021-01-01T00:00:00.000000'
          description: This block describes a task
          tags:
          - tag1
          - tag2
          type: task
    UpdateTaskModel:
      properties:
        name:
          type: string
          title: Name
        goal:
          type: string
          title: Goal
        completed:
          type: boolean
          title: Completed
      type: object
      title: UpdateTaskModel
      example:
        completed: true
        goal: Why are we doing it?
        name: An informative task title
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
