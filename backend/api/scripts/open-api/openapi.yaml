components:
  schemas:
    BlockModel:
      properties:
        _id:
          title: ' Id'
          type: string
        child_thread_id:
          default: ''
          title: Child Thread Id
          type: string
        content:
          title: Content
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
        creator_id:
          default: unknown id
          title: Creator Id
          type: string
        image:
          anyOf:
          - type: string
          - type: 'null'
          title: Image
        last_modified:
          format: date-time
          title: Last Modified
          type: string
        link_meta:
          anyOf:
          - $ref: '#/components/schemas/LinkMetaModel'
          - type: 'null'
        main_thread_id:
          default: ''
          title: Main Thread Id
          type: string
        position:
          default: 0
          title: Position
          type: integer
        task_status:
          default: todo
          pattern: ^(todo|inprogress|done)$
          title: Task Status
          type: string
        tenant_id:
          default: ''
          title: Tenant Id
          type: string
      required:
      - content
      title: BlockModel
      type: object
    BlockWithCreator:
      properties:
        _id:
          title: ' Id'
          type: string
        child_thread_id:
          default: ''
          title: Child Thread Id
          type: string
        content:
          title: Content
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
        creator:
          $ref: '#/components/schemas/UserModel'
        creator_id:
          default: unknown id
          title: Creator Id
          type: string
        image:
          anyOf:
          - type: string
          - type: 'null'
          title: Image
        last_modified:
          format: date-time
          title: Last Modified
          type: string
        link_meta:
          anyOf:
          - $ref: '#/components/schemas/LinkMetaModel'
          - type: 'null'
        main_thread_id:
          default: ''
          title: Main Thread Id
          type: string
        position:
          default: 0
          title: Position
          type: integer
        task_status:
          default: todo
          pattern: ^(todo|inprogress|done)$
          title: Task Status
          type: string
        tenant_id:
          default: ''
          title: Tenant Id
          type: string
      required:
      - content
      - creator
      title: BlockWithCreator
      type: object
    Body_Upload_Files_uploadFiles__post:
      properties:
        files:
          items:
            format: binary
            type: string
          title: Files
          type: array
      required:
      - files
      title: Body_Upload_Files_uploadFiles__post
      type: object
    ChannelModel:
      properties:
        created_at:
          title: Created At
          type: string
        creator:
          title: Creator
          type: string
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
      required:
      - id
      - name
      - creator
      - created_at
      title: ChannelModel
      type: object
    CompositeChannelList:
      properties:
        _id:
          title: ' Id'
          type: string
        public_channels:
          items:
            $ref: '#/components/schemas/ChannelModel'
          title: Public Channels
          type: array
        subscribed_channels:
          items:
            $ref: '#/components/schemas/ChannelModel'
          title: Subscribed Channels
          type: array
      required:
      - _id
      - subscribed_channels
      - public_channels
      title: CompositeChannelList
      type: object
    CreateBlockModel:
      properties:
        content:
          title: Content
          type: string
        image:
          anyOf:
          - type: string
          - type: 'null'
          title: Image
        main_thread_id:
          title: Main Thread Id
          type: string
      required:
      - content
      - main_thread_id
      title: CreateBlockModel
      type: object
    CreateChildThreadModel:
      properties:
        content:
          items:
            $ref: '#/components/schemas/BlockModel'
          title: Content
          type: array
        mainThreadId:
          title: Mainthreadid
          type: string
        parentBlockId:
          title: Parentblockid
          type: string
        title:
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9]+$
          title: Title
          type: string
        type:
          title: Type
          type: string
      required:
      - type
      - title
      - parentBlockId
      - mainThreadId
      title: CreateChildThreadModel
      type: object
    CreateThreadModel:
      properties:
        content:
          items:
            $ref: '#/components/schemas/BlockModel'
          title: Content
          type: array
        title:
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9]+$
          title: Title
          type: string
        type:
          title: Type
          type: string
      required:
      - type
      - title
      title: CreateThreadModel
      type: object
    CreateUserThreadFlagModel:
      properties:
        bookmark:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Bookmark
        thread_id:
          title: Thread Id
          type: string
        unfollow:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Unfollow
        unread:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Unread
        upvote:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Upvote
      required:
      - thread_id
      title: CreateUserThreadFlagModel
      type: object
    FilesResponseModel:
      properties:
        urls:
          items:
            type: string
          title: Urls
          type: array
      title: FilesResponseModel
      type: object
    FullThreadInfo:
      properties:
        _id:
          title: ' Id'
          type: string
        block:
          anyOf:
          - $ref: '#/components/schemas/BlockModel'
          - type: 'null'
        bookmark:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Bookmark
        content:
          items:
            $ref: '#/components/schemas/BlockWithCreator'
          title: Content
          type: array
        created_at:
          title: Created At
          type: string
        creator:
          $ref: '#/components/schemas/UserModel'
        default_block:
          allOf:
          - $ref: '#/components/schemas/BlockWithCreator'
        headline:
          title: Headline
          type: string
        last_modified:
          format: date-time
          title: Last Modified
          type: string
        num_blocks:
          default: 0
          title: Num Blocks
          type: integer
        parent_block_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Parent Block Id
        title:
          title: Title
          type: string
        type:
          title: Type
          type: string
        unfollow:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Unfollow
        unread:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Unread
        upvote:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Upvote
      required:
      - _id
      - title
      - type
      - created_at
      - creator
      title: FullThreadInfo
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    LinkMetaModel:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        image:
          anyOf:
          - type: string
          - type: 'null'
          title: Image
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        url:
          title: Url
          type: string
      required:
      - url
      title: LinkMetaModel
      type: object
    SessionInfo:
      properties:
        accessTokenPayload:
          title: Accesstokenpayload
          type: object
        email:
          title: Email
          type: string
        fullName:
          title: Fullname
          type: string
        last_login:
          title: Last Login
          type: string
        picture:
          title: Picture
          type: string
        sessionHandle:
          title: Sessionhandle
          type: string
        userId:
          title: Userid
          type: string
      required:
      - sessionHandle
      - userId
      - fullName
      - email
      - accessTokenPayload
      title: SessionInfo
      type: object
    SubscribeChannelRequest:
      properties:
        channel_ids:
          items:
            type: string
          title: Channel Ids
          type: array
      required:
      - channel_ids
      title: SubscribeChannelRequest
      type: object
    SubscribedChannelList:
      properties:
        _id:
          title: ' Id'
          type: string
        subscribed_channels:
          items:
            $ref: '#/components/schemas/ChannelModel'
          title: Subscribed Channels
          type: array
      required:
      - _id
      - subscribed_channels
      title: SubscribedChannelList
      type: object
    ThreadMetaData:
      properties:
        _id:
          title: ' Id'
          type: string
        block:
          anyOf:
          - $ref: '#/components/schemas/BlockModel'
          - type: 'null'
        bookmark:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Bookmark
        created_at:
          title: Created At
          type: string
        creator:
          $ref: '#/components/schemas/UserModel'
        headline:
          title: Headline
          type: string
        last_modified:
          format: date-time
          title: Last Modified
          type: string
        num_blocks:
          default: 0
          title: Num Blocks
          type: integer
        parent_block_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Parent Block Id
        title:
          title: Title
          type: string
        type:
          title: Type
          type: string
        unfollow:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Unfollow
        unread:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Unread
        upvote:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Upvote
      required:
      - _id
      - title
      - type
      - created_at
      - creator
      title: ThreadMetaData
      type: object
    ThreadModel:
      properties:
        _id:
          title: ' Id'
          type: string
        content:
          items:
            $ref: '#/components/schemas/BlockModel'
          title: Content
          type: array
        created_at:
          format: date-time
          title: Created At
          type: string
        creator_id:
          title: Creator Id
          type: string
        headline:
          title: Headline
          type: string
        last_modified:
          title: Last Modified
          type: string
        num_blocks:
          default: 0
          title: Num Blocks
          type: integer
        parent_block_id:
          anyOf:
          - type: string
          - type: 'null'
          'null': true
          title: Parent Block Id
        slack_thread_ts:
          anyOf:
          - type: number
          - type: 'null'
          'null': true
          title: Slack Thread Ts
        tenant_id:
          title: Tenant Id
          type: string
        title:
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9]+$
          title: Title
          type: string
        type:
          title: Type
          type: string
      required:
      - creator_id
      - last_modified
      - type
      - title
      - tenant_id
      title: ThreadModel
      type: object
    ThreadsInfo:
      properties:
        info:
          additionalProperties:
            type: string
          title: Info
          type: object
      required:
      - info
      title: ThreadsInfo
      type: object
    ThreadsMetaData:
      properties:
        metadata:
          items:
            $ref: '#/components/schemas/ThreadMetaData'
          title: Metadata
          type: array
      required:
      - metadata
      title: ThreadsMetaData
      type: object
    ThreadsModel:
      properties:
        threads:
          items:
            $ref: '#/components/schemas/ThreadModel'
          title: Threads
          type: array
      required:
      - threads
      title: ThreadsModel
      type: object
    UpdateBlockModel:
      properties:
        content:
          title: Content
          type: string
        position:
          title: Position
          type: integer
      title: UpdateBlockModel
      type: object
    UpdateBlockPositionModel:
      properties:
        block_id:
          default: ''
          title: Block Id
          type: string
        new_position:
          default: 0
          title: New Position
          type: integer
      title: UpdateBlockPositionModel
      type: object
    UpdateThreadTitleModel:
      properties:
        title:
          title: Title
          type: string
      required:
      - title
      title: UpdateThreadTitleModel
      type: object
    UserMap:
      properties:
        users:
          additionalProperties:
            $ref: '#/components/schemas/UserModel'
          title: Users
          type: object
      required:
      - users
      title: UserMap
      type: object
    UserModel:
      properties:
        _id:
          title: ' Id'
          type: string
        email:
          default: unknown email
          title: Email
          type: string
        last_login:
          default: unknown last login
          title: Last Login
          type: string
        name:
          default: unknown user
          title: Name
          type: string
        picture:
          default: unknown picture link
          title: Picture
          type: string
      required:
      - _id
      title: UserModel
      type: object
    UserThreadFlagModel:
      properties:
        _id:
          title: ' Id'
          type: string
        bookmark:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Bookmark
        tenant_id:
          title: Tenant Id
          type: string
        thread_id:
          title: Thread Id
          type: string
        unfollow:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Unfollow
        unread:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Unread
        upvote:
          anyOf:
          - type: boolean
          - type: 'null'
          'null': true
          title: Upvote
        user_id:
          title: User Id
          type: string
      required:
      - user_id
      - thread_id
      - tenant_id
      title: UserThreadFlagModel
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /blocks:
    post:
      operationId: create_blocks_post
      parameters:
      - in: query
        name: thread_title
        required: true
        schema:
          title: Thread Title
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlockModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockWithCreator'
          description: Create a new block
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create
      tags:
      - threads
  /blocks/child:
    post:
      operationId: child_thread_blocks_child_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChildThreadModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullThreadInfo'
          description: Create a new child thread from a block
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Child Thread
      tags:
      - threads
  /blocks/{id}:
    put:
      operationId: update_blocks__id__put
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      - in: query
        name: thread_title
        required: true
        schema:
          title: Thread Title
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlockModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockModel'
          description: Update a block
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update
      tags:
      - threads
  /blocks/{id}/position:
    put:
      operationId: update_block_position_blocks__id__position_put
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlockPositionModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBlockPositionModel'
          description: Update a block position
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Block Position
      tags:
      - threads
  /blocks/{id}/taskStatus:
    put:
      operationId: update_block_task_status_blocks__id__taskStatus_put
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Task Status
              type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockWithCreator'
          description: Update a block task status
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Block Task Status
      tags:
      - threads
  /channel_list:
    get:
      operationId: ch_channel_list_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeChannelList'
          description: Get a list of public and subscribed channels
      summary: Ch
      tags:
      - slack
  /healthcheck:
    get:
      operationId: healthcheck_healthcheck_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Healthcheck
  /linkmeta:
    get:
      operationId: get_link_meta_linkmeta_get
      parameters:
      - in: query
        name: url
        required: true
        schema:
          title: Url
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Link Meta
  /newsfeed:
    get:
      operationId: filter_newsfeed_get
      parameters:
      - in: query
        name: bookmark
        required: false
        schema:
          default: false
          title: Bookmark
          type: boolean
      - in: query
        name: unread
        required: false
        schema:
          default: false
          title: Unread
          type: boolean
      - in: query
        name: unfollow
        required: false
        schema:
          default: false
          title: Unfollow
          type: boolean
      - in: query
        name: upvote
        required: false
        schema:
          default: false
          title: Upvote
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadsMetaData'
          description: Get news feed as  data for all threads
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Filter
      tags:
      - threads
  /searchThreads:
    get:
      operationId: search_threads_searchThreads_get
      parameters:
      - in: query
        name: query
        required: true
        schema:
          title: Query
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadsModel'
          description: Search threads by query and get matching threads
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Threads
      tags:
      - threads
  /searchTitles:
    get:
      operationId: search_titles_searchTitles_get
      parameters:
      - in: query
        name: query
        required: true
        schema:
          title: Query
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Search Titles Searchtitles Get
                type: array
          description: Search threads by query and get title
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Titles
      tags:
      - threads
  /sessioninfo:
    get:
      operationId: secure_api_sessioninfo_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
          description: Successful Response
      summary: Secure Api
      tags:
      - session
  /slack_user_token:
    post:
      operationId: slack_user_token_slack_user_token_post
      parameters:
      - in: query
        name: authcode
        required: true
        schema:
          title: Authcode
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Slack User Token
  /subscribe_channel:
    post:
      operationId: subscribe_channel_subscribe_channel_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeChannelRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribedChannelList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Subscribe Channel
      tags:
      - slack
  /thread/flag:
    post:
      operationId: create_tf_thread_flag_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserThreadFlagModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThreadFlagModel'
          description: Create a new thread flag
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Tf
      tags:
      - threads
  /threadTypes:
    get:
      operationId: tt_threadTypes_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Tt Threadtypes Get
                type: array
          description: Get all thread types
      summary: Tt
      tags:
      - threads
  /threads:
    post:
      operationId: create_th_threads_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThreadModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullThreadInfo'
          description: Create a new thread
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Th
      tags:
      - threads
  /threads/{id}:
    get:
      operationId: get_thread_id_threads__id__get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullThreadInfo'
          description: Get a thread by id
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Thread Id
      tags:
      - threads
    put:
      operationId: update_th_threads__id__put
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadTitleModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullThreadInfo'
          description: Update a thread by id
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Th
      tags:
      - threads
  /threadsInfo:
    get:
      operationId: ti_threadsInfo_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadsInfo'
          description: Get all thread titles and corresponding types
      summary: Ti
      tags:
      - threads
  /uploadFiles/:
    post:
      operationId: Upload_Files_uploadFiles__post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_Upload_Files_uploadFiles__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesResponseModel'
          description: Returns the uploaded file url
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Upload Files
      tags:
      - storage
      - storage
  /user:
    get:
      operationId: all_users_user_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMap'
          description: Get user information
      summary: All Users
      tags:
      - threads
