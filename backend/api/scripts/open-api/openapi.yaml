components:
  schemas:
    BlockCollection:
      example:
        blocks:
        - content: This is the content of the block
        - content: This is the content of the block
      properties:
        blocks:
          items:
            $ref: '#/components/schemas/BlockModel'
          title: Blocks
          type: array
      required:
      - blocks
      title: BlockCollection
      type: object
    BlockModel:
      properties:
        _id:
          title: ' Id'
          type: string
        child_id:
          default: ''
          title: Child Id
          type: string
        content:
          title: Content
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          default: unknown user
          title: Created By
          type: string
        creator_email:
          default: unknown email
          title: Creator Email
          type: string
        creator_id:
          default: unknown id
          title: Creator Id
          type: string
        creator_picture:
          default: unknown picture link
          title: Creator Picture
          type: string
      required:
      - content
      title: BlockModel
      type: object
    ChannelModel:
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
      required:
      - id
      - name
      title: ChannelModel
      type: object
    CompositeChannelList:
      properties:
        _id:
          title: ' Id'
          type: string
        public_channels:
          items:
            $ref: '#/components/schemas/ChannelModel'
          title: Public Channels
          type: array
        subscribed_channels:
          items:
            $ref: '#/components/schemas/ChannelModel'
          title: Subscribed Channels
          type: array
      required:
      - _id
      - subscribed_channels
      - public_channels
      title: CompositeChannelList
      type: object
    CreateChildThreadModel:
      example:
        content:
        - content: This is the content of the block
        - content: This is the content of the block
        title: This is the title of the thread
        type: /new-plan
      properties:
        content:
          items:
            $ref: '#/components/schemas/BlockModel'
          title: Content
          type: array
        parentBlockId:
          title: Parentblockid
          type: string
        parentThreadId:
          title: Parentthreadid
          type: string
        title:
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9]+$
          title: Title
          type: string
        type:
          title: Type
          type: string
      required:
      - type
      - title
      - parentBlockId
      - parentThreadId
      title: CreateChildThreadModel
      type: object
    CreateThreadModel:
      example:
        content:
        - content: This is the content of the block
        - content: This is the content of the block
        title: This is the title of the thread
        type: /new-plan
      properties:
        content:
          items:
            $ref: '#/components/schemas/BlockModel'
          title: Content
          type: array
        title:
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9]+$
          title: Title
          type: string
        type:
          title: Type
          type: string
      required:
      - type
      - title
      title: CreateThreadModel
      type: object
    CreateUserThreadFlagModel:
      example:
        thread_id: 12345678-123
      properties:
        bookmark:
          type: boolean
          title: Bookmark
        read:
          type: boolean
          title: Read
        thread_id:
          title: Thread Id
          type: string
        unfollow:
          type: boolean
          title: Unfollow
        upvote:
          type: boolean
          title: Upvote
      required:
      - thread_id
      title: CreateUserThreadFlagModel
      type: object
    Creator:
      example:
        email: hey@abc.com
        id: 12345678-1234-5678-1234-567812345678
        name: firstname lastname
        picture: https://www.example.com/picture.jpg
      properties:
        email:
          default: unknown email
          title: Email
          type: string
        id:
          default: unknown id
          title: Id
          type: string
        name:
          default: unknown user
          title: Name
          type: string
        picture:
          default: unknown picture link
          title: Picture
          type: string
      title: Creator
      type: object
    Date:
      properties:
        date:
          format: date-time
          title: Date
          type: string
      required:
      - date
      title: Date
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    PublicChannelList:
      properties:
        public_channels:
          items:
            $ref: '#/components/schemas/ChannelModel'
          title: Public Channels
          type: array
      required:
      - public_channels
      title: PublicChannelList
      type: object
    SessionInfo:
      properties:
        accessTokenPayload:
          title: Accesstokenpayload
          type: object
        email:
          title: Email
          type: string
        fullName:
          title: Fullname
          type: string
        last_login:
          title: Last Login
          type: string
        picture:
          title: Picture
          type: string
        sessionHandle:
          title: Sessionhandle
          type: string
        userId:
          title: Userid
          type: string
      required:
      - sessionHandle
      - userId
      - fullName
      - email
      - accessTokenPayload
      title: SessionInfo
      type: object
    SubscribeChannelRequest:
      properties:
        channel_ids:
          items:
            type: string
          title: Channel Ids
          type: array
      required:
      - channel_ids
      title: SubscribeChannelRequest
      type: object
    SubscribedChannelList:
      properties:
        _id:
          title: ' Id'
          type: string
        subscribed_channels:
          items:
            $ref: '#/components/schemas/ChannelModel'
          title: Subscribed Channels
          type: array
      required:
      - _id
      - subscribed_channels
      title: SubscribedChannelList
      type: object
    ThreadHeadlineModel:
      example:
        headline: This is the headline of the thread
        id: 12345678-1234-5678-1234-567812345678
        title: This is the title of the thread
      properties:
        _id:
          title: ' Id'
          type: string
        headline:
          title: Headline
          type: string
        title:
          title: Title
          type: string
      required:
      - _id
      - title
      - headline
      title: ThreadHeadlineModel
      type: object
    ThreadHeadlinesModel:
      properties:
        headlines:
          items:
            $ref: '#/components/schemas/ThreadHeadlineModel'
          title: Headlines
          type: array
      required:
      - headlines
      title: ThreadHeadlinesModel
      type: object
    ThreadMetaData:
      example:
        created_date: '2021-01-01T00:00:00.000000'
        creator:
          email: a@b.com
          id: 12345678-123
          name: firstname lastname
          picture: https://www.example.com/picture.jpg
        id: 12345678-1234-5678-1234-567812345678
        title: This is the title of the thread
        type: /new-plan
      properties:
        _id:
          title: ' Id'
          type: string
        created_date:
          title: Created Date
          type: string
        creator:
          $ref: '#/components/schemas/Creator'
        title:
          title: Title
          type: string
        type:
          title: Type
          type: string
      required:
      - _id
      - title
      - type
      - created_date
      - creator
      title: ThreadMetaData
      type: object
    ThreadModel:
      example:
        content:
        - content: This is the content of the block
        - content: This is the content of the block
        created_date: '2021-01-01T00:00:00.000000'
        creator: user1
        headline: This is the headline of the thread
        tenant_id: ABCD1234
        title: This is the title of the thread
        type: /new-plan
      properties:
        _id:
          title: ' Id'
          type: string
        content:
          items:
            $ref: '#/components/schemas/BlockModel'
          title: Content
          type: array
        created_date:
          format: date-time
          title: Created Date
          type: string
        creator:
          title: Creator
          type: string
        headline:
          title: Headline
          type: string
        tenant_id:
          title: Tenant Id
          type: string
        title:
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9]+$
          title: Title
          type: string
        type:
          title: Type
          type: string
      required:
      - creator
      - type
      - title
      - tenant_id
      title: ThreadModel
      type: object
    ThreadsInfo:
      example:
        titles:
        - ThreadTitle: ThreadType
        - AnotherThreadTitle: AnotherThreadType
      properties:
        info:
          additionalProperties:
            type: string
          title: Info
          type: object
      required:
      - info
      title: ThreadsInfo
      type: object
    ThreadsMetaData:
      example:
        metadata:
        - created_date: '2021-01-01T00:00:00.000000'
          creator: user1
          id: 12345678-1234-5678-1234-567812345678
          title: This is the title of the thread
          type: /new-plan
        - created_date: '2021-01-01T00:00:00.000000'
          creator: user1
          id: 12345678-1234-5678-1234-567812345678
          title: This is the title of the thread
          type: /new-plan
      properties:
        metadata:
          items:
            $ref: '#/components/schemas/ThreadMetaData'
          title: Metadata
          type: array
      required:
      - metadata
      title: ThreadsMetaData
      type: object
    ThreadsModel:
      example:
        threads:
        - content:
          - content: This is the content of the block
          - content: This is the content of the block
          created_date: '2021-01-01T00:00:00.000000'
          creator: user1
          title: This is the title of the thread
          type: /new-plan
        - content:
          - content: This is the content of the block
          - content: This is the content of the block
          created_date: '2021-01-01T00:00:00.000000'
          creator: user1
          title: This is the title of the thread
          type: /new-plan
      properties:
        threads:
          items:
            $ref: '#/components/schemas/ThreadModel'
          title: Threads
          type: array
      required:
      - threads
      title: ThreadsModel
      type: object
    UpdateBlockModel:
      example:
        content: This is the content of the block
      properties:
        content:
          title: Content
          type: string
      title: UpdateBlockModel
      type: object
    UserThreadFlagModel:
      properties:
        _id:
          title: ' Id'
          type: string
        bookmark:
          default: false
          title: Bookmark
          type: boolean
        read:
          default: false
          title: Read
          type: boolean
        thread_id:
          title: Thread Id
          type: string
        unfollow:
          default: false
          title: Unfollow
          type: boolean
        upvote:
          default: false
          title: Upvote
          type: boolean
        user_id:
          title: User Id
          type: string
      required:
      - user_id
      - thread_id
      title: UserThreadFlagModel
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /allThreads:
    get:
      operationId: at_allThreads_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ThreadsModel'
                title: Response At Allthreads Get
                type: array
          description: Successful Response
      summary: At
      tags:
      - threads
  /blocks:
    post:
      operationId: create_blocks_post
      parameters:
      - in: query
        name: thread_title
        required: true
        schema:
          title: Thread Title
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlockModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadModel'
          description: Create a new block
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create
      tags:
      - threads
    put:
      operationId: update_blocks_put
      parameters:
      - in: query
        name: thread_title
        required: true
        schema:
          title: Thread Title
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlockModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadModel'
          description: Update a block
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update
      tags:
      - threads
  /blocks/child:
    post:
      operationId: child_thread_blocks_child_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChildThreadModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Child Thread
      tags:
      - threads
  /blocksDate:
    get:
      operationId: get_blocks_by_date_blocksDate_get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Date'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockCollection'
          description: Get all blocks for a given date
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Blocks By Date
      tags:
      - threads
  /channel_list:
    get:
      operationId: ch_channel_list_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeChannelList'
          description: Get all blocks for a given date
      summary: Ch
      tags:
      - slack
  /healthcheck:
    get:
      operationId: healthcheck_healthcheck_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Healthcheck
  /journal:
    get:
      operationId: date_journal_get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Date'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockCollection'
          description: Get journal for a given date
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Date
      tags:
      - threads
  /metadata:
    get:
      operationId: md_metadata_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadsMetaData'
          description: Get meta data for all threads
      summary: Md
      tags:
      - threads
  /public_channels:
    get:
      operationId: public_channels_public_channels_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicChannelList'
          description: Get all public channels
      summary: Public Channels
      tags:
      - slack
  /searchThreads:
    get:
      operationId: search_threads_searchThreads_get
      parameters:
      - in: query
        name: query
        required: true
        schema:
          title: Query
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadsModel'
          description: Search threads by query and get matching threads
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Threads
      tags:
      - threads
  /searchTitles:
    get:
      operationId: search_titles_searchTitles_get
      parameters:
      - in: query
        name: query
        required: true
        schema:
          title: Query
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Search Titles Searchtitles Get
                type: array
          description: Search threads by query and get title
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Titles
      tags:
      - threads
  /sessioninfo:
    get:
      operationId: secure_api_sessioninfo_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
          description: Successful Response
      summary: Secure Api
      tags:
      - session
  /slack_user_token:
    post:
      operationId: slack_user_token_slack_user_token_post
      parameters:
      - in: query
        name: authcode
        required: true
        schema:
          title: Authcode
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Slack User Token
  /subscribe_channel:
    post:
      operationId: subscribe_channel_subscribe_channel_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeChannelRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribedChannelList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Subscribe Channel
      tags:
      - slack
  /thread/flag:
    post:
      operationId: create_tf_thread_flag_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserThreadFlagModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserThreadFlagModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Tf
      tags:
      - threads
  /threadHeadlines:
    get:
      operationId: th_threadHeadlines_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadHeadlinesModel'
          description: Get headlines for all threads
      summary: Th
      tags:
      - threads
  /threadTypes:
    get:
      operationId: tt_threadTypes_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Tt Threadtypes Get
                type: array
          description: Get all thread types
      summary: Tt
      tags:
      - threads
  /threads:
    post:
      operationId: create_th_threads_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThreadModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Th
      tags:
      - threads
  /threads/{id}:
    get:
      operationId: get_thread_id_threads__id__get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Thread Id
      tags:
      - threads
    put:
      operationId: update_th_threads__id__put
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThreadModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Th
      tags:
      - threads
  /threads/{title}:
    get:
      operationId: get_thread_threads__title__get
      parameters:
      - in: path
        name: title
        required: true
        schema:
          title: Title
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Thread
      tags:
      - threads
  /threadsInfo:
    get:
      operationId: ti_threadsInfo_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadsInfo'
          description: Get all thread titles and corresponding types
      summary: Ti
      tags:
      - threads
