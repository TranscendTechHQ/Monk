[
  {
    "commit_message": "minor cleanup\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "de3a8b2c0daf9b7148b0bded7e2c1583f8f5c891",
    "commit_timestamp": 1708484934,
    "code_diff": "",
    "code_summary": "This code diff (patch) accomplishes the following:\n\n1. Imports the `flutter/widgets.dart` library using the alias \"prefix\" and removes the import of `dart:io` in the `login.dart` file.\n2. Replaces the `loginWithGoogle()` method in the `LoginScreenState` class with a new version that uses the updated `GoogleSignIn` constructor. This new version adds a `popUntil()` function call to the `Future.delayed()` method, and uses the `prefix` alias for the `Navigator` class.\n3. Updated the `macos/Podfile.lock` file to reflect the changes in versions for the `google_sign_in_ios` and `web` dependencies.\n4. Updated the `"
  },
  {
    "commit_message": "upgrade for running frontend on web target\nDoes not properly work as social login button\ndoes nothing.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "848ce592f32eb736a5fdf1eb3dc7d6c9b62417eb",
    "commit_timestamp": 1708483764,
    "code_diff": "",
    "code_summary": "What does the following code diff accomplish?\n\nThis code diff updates the pubspec.lock file to reflect the changes made in the pubspec.yaml file. It also updates the dependencies to their latest versions and adds new dependencies as needed. Additionally, it activates new lint rules for the project."
  },
  {
    "commit_message": "flutter upgrade\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "04a35e90c7d811a81d4a1ddb899229fc37a6ea3a",
    "commit_timestamp": 1708482927,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following things:\n\n1. It removes the `dart:ffi` import from the `CommandBox` class.\n2. It removes the `this` keyword from the constructor of the `HomeScreen` class.\n3. It updates the value of `LastUpgradeCheck` in the `PBXProject` attribute to 1510.\n4. It updates the value of `LastUpgradeCheck` in the `Scheme` attribute to 1510.\n5. It removes the `HttpValidationError` import from the `ThreadsApi` class.\n6. It updates the value of `version` in the `Scheme` attribute from 1.3 to 1.4.\n7. It adds the `dio`"
  },
  {
    "commit_message": "focus on commandbox automatically when the screen is loaded\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "2ebc8db0036fcd3c7de1c3389b19c1833953d1c1",
    "commit_timestamp": 1708062760,
    "code_diff": "",
    "code_summary": "The code diff is modifying the logic in the `frontend/lib/screens/commandbox.dart` file for clarity and to improve functionality. Specifically, it:\n- Changes the `commandTypeAhead()` function to a constructor function of the `CommandTypeAhead` widget. This makes the code cleaner and easier to read.\n- Adds a required `commandFocusNode` parameter to the `CommandTypeAhead` constructor and passes it to the `TypeAheadField` widget. This allows the widget to manage the focus of the command text field.\n- Adds a `commandFocusNode` property to the `CommandBox` widget and assigns it to the `Text` widget in the `Visibility` widget. This ensures that the command text field is focused when the"
  },
  {
    "commit_message": "refactor and remove some code from RawKeyboard listener\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "745da23649a7b007f5b8ded61f762ffaa92735a6",
    "commit_timestamp": 1708048377,
    "code_diff": "",
    "code_summary": "This code removes the `if` statement and adds a condition to the `commandVisibility` `SingleActivator`, making it so that when the \"Enter\" key is pressed with the \"Shift\" key, a block is created with the text from the command box."
  },
  {
    "commit_message": "Use CallbackShortcuts instead of buggy Keymap package\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "73f9908e5395ead5d945d465efe1237f6209eed2",
    "commit_timestamp": 1708048107,
    "code_diff": "",
    "code_summary": "The code diff modifies the way the `KeyboardWidget` is used in the `CommandBox` class. It replaces the keymap library with the more lightweight CallbackShortcuts library. This change also simplifies how the \"Search for Threads\" action is triggered, using a single activator instead of a combination of key and meta key."
  },
  {
    "commit_message": "Use a nice keymap package for shortcuts.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "ec8c16b16565f34cab9c2df4956d6e4043811318",
    "commit_timestamp": 1708046475,
    "code_diff": "",
    "code_summary": "This code diff adds a number of dependencies to the Flutter project, including `keymap`, which provides the ability to create and manage keyboard shortcuts, and `flutter_markdown`, a widget for rendering Markdown formatted text. It also sets up key bindings for certain actions in the app, such as searching for threads using the `Command+S` key combination. Finally, it also adds a number of changes to the `pubspec.lock` and `pubspec.yaml` files, indicating these new dependencies and updates."
  },
  {
    "commit_message": "refactoring\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "e69ed1d866304009c49e8572135bbc1427acd1f4",
    "commit_timestamp": 1708040591,
    "code_diff": "",
    "code_summary": "The code diff adds a new variable called `threadInput` and replaces the `TextField` widget with that variable in the `child` property of the `Stack` widget. The new `threadInput` variable has additional logic in its `onChanged` handler to check for commands entered by the user. This allows the user to press SHIFT+Enter to save their text, or press \"/\" to access a list of commands. It also adds a `Visibility` widget to toggle the visibility of the `threadInput` or `commandBox` widgets based on the current value of `commandVisibility`."
  },
  {
    "commit_message": "Catch Dio 500 internal errors in Flutter.\nWill see what to do in the future to fail gracefully\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "b09db8c39ade3e558afbfa38a55dd100b4f5f331",
    "commit_timestamp": 1708038233,
    "code_diff": "",
    "code_summary": "The code diff adds an additional error handling functionality for the Dio client in the NetworkManager class. This new error handler checks for a 500 status code and prints a message if one is found. It also prints a message for any other DioErrors. Additionally, the return statement ensures that the error handling process continues."
  },
  {
    "commit_message": "tiny, but nice adjustments to the UI\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "49c63f982870a448a8a9c2acc9685c015b720efa",
    "commit_timestamp": 1707983991,
    "code_diff": "",
    "code_summary": "This code diff does the following:\n\n1. Changes the name of `SearchResults` class constructor from `super.key` to `const super.key`.\n2. Comments out the line `int selectedIndex = 0` in the `SearchResults` class.\n3. Adds the `reverse` and `afocus` properties to the `ListView.builder` in the `SearchResults` class.\n4. Changes the value of `selectedTileColor` and `selectedColor` properties to `Theme.of(context).colorScheme.primary` in the `ListTile` widget in the `SearchResults` class.\n5. Comments out the line `selectedIndex = index` in the `onTap` function in the `SearchResults` class. \n6"
  },
  {
    "commit_message": "remove the default selected value from the dropdown\nnow just the user can select the value from the dropdown\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "9cadc1928fa340c46cfa74388a798c401c05ac11",
    "commit_timestamp": 1707982073,
    "code_diff": "",
    "code_summary": "This code diff accomplishes two things:\n\n1. It adds the `selectedColor` attribute to the `ListTile` widget on line 47, which sets the background color of the tile when it is selected.\n2. It also comments out the `selected` attribute on line 49, which previously set the selected state of the tile based on the `selectedIndex` variable. This means that the tile will still change color when tapped, but it will not change its visual representation to indicate being selected."
  },
  {
    "commit_message": "Able to switch threads from search results.\nStill a bit jittery UI. Fix it.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "393066202513bbf21092f954973c21a946a7fddc",
    "commit_timestamp": 1707981248,
    "code_diff": "",
    "code_summary": "This code diff makes changes to multiple files in the frontend/lib directory. It starts by changing line 11 of frontend/lib/repo/search.dart, which throws an exception if the results cannot be fetched, to print the results instead. This is then followed by a change to a hash value in frontend/lib/repo/search.g.dart.\n\nThe next change is in frontend/lib/screens/commandbox.dart, where the switchThread method is added. This method takes in the new thread title and thread type, sets the screen visibility to the thread, and navigates to the ThreadScreen page with the new thread information.\n\nNext, in the CommandTypeAhead class, the try-catch block is replaced with a call to the switchThread method, passing in the new thread"
  },
  {
    "commit_message": "AutoFocus on search bar\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "4b7d7f5004082d64782bcc5b374affd4eb30154d",
    "commit_timestamp": 1707963460,
    "code_diff": "",
    "code_summary": "This code diff accomplishes a few things:\n\n1. It adds a focus node parameter to the `SearchInput` widget constructor.\n2. It passes the `_searchFocusNode` focus node to the `SearchModal` widget in the `child` property.\n3. It passes the `_searchFocusNode` focus node to the `SearchInput` widget in the `focusNode` property.\n4. It updates the `SearchInput` widget to use the given focus node when creating the `SearchBar` widget.\n5. It adds a `focusNode` property to the `SearchModal` widget constructor.\n6. It passes the `_searchFocusNode` focus node to the `SearchInput` widget in the `focusNode` property"
  },
  {
    "commit_message": "Able to query using search in the frontend UI.\nStill need to make the UI usable as one cannot\nselect the results.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "ef5ecf67ec165fd203cf1a2aa92b2fda1fc7c42b",
    "commit_timestamp": 1707961420,
    "code_diff": "",
    "code_summary": "This code diff changes the behavior of the `CommandBox` widget in the `commandbox.dart` file and adds a new `SearchModal` widget in the `search.dart` file.\n\n1. The `diff --git` line shows that changes are being made to the `commandbox.dart` and `search.dart` files.\n2. `index 915bee8..b621fe3 100644` shows the starting and ending commit IDs and the file mode.\n3. The `--- a/frontend/lib/screens/commandbox.dart` line indicates that changes are being made to the `commandbox.dart` file in the old code.\n4. The `+++ b/frontend/lib/screens/commandbox.dart` line indicates that changes are being made"
  },
  {
    "commit_message": "Use a SearchAnchor instead of a SearchBar\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "6ebbc315ebe6d11f133a1c0c36767d36419c9b77",
    "commit_timestamp": 1707943667,
    "code_diff": "",
    "code_summary": "This code diff adds a new `SearchController` object to the `CommandBox` widget, replaces the existing `TextEditingController` for the search box with a new `searchTextController`, renames the search controller to `_searchController`, and adds a new `SearchBar` and `SearchAnchor` widgets to the `visible` attribute of the `Visibility` widget. The `SearchAnchor` widget allows for the creation of a search bar with suggested search terms while the `SearchBar` widget itself provides the functionality for the search bar. Additionally, the `SearchAnchor` widget includes a placeholders for a `builder` and `suggestionsBuilder` attribute, which will reference functions later defined in the code."
  },
  {
    "commit_message": "Indecision. Whether to use SearchBar or SearchAnchor\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "f36cc9e0050c9a0bf994d9a6b8e9870464a16d73",
    "commit_timestamp": 1707943157,
    "code_diff": "",
    "code_summary": "That's a code snap diff and it shows the changes made in the file `frontend/lib/repo/search.dart` compared to the file `frontend/lib/screens/commandbox.dart` and `frontend/lib/screens/search.dart`. Specifically, it replaces the function `queryMatchingThreads` with `searchTitlesSearchTitlesGet`, adds a line to print `results`, and changes the SearchBar widget to SearchInput. It also adds an onSubmitted function to the SearchBar widget that calls the queryMatchingThreadsProvider. Finally, it renames the SearchBar widget in the SearchModal widget to SearchInput."
  },
  {
    "commit_message": "Use Material SearchBar widget instead of\nreinventing the wheel.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "d9819bcf5ca731dfc10445b6585d136e0e866810",
    "commit_timestamp": 1707939682,
    "code_diff": "",
    "code_summary": "This code diff changes the behavior of the CommandBox widget in a Flutter application. The changes include:\n- Renaming the `_optionFocusNode` variable to `_searchFocusNode`.\n- Setting the `_searchFocusNode` as the focus node when the search box is shown.\n- Removing the `autocorrect` and `enableSuggestions` properties from the search box.\n- Adding a `SearchBar` widget instead of a `TextField` widget for the search box.\n- Setting the `hintText` property for the search box.\n- Passing the `_searchFocusNode` as a parameter to the `SearchBar` widget."
  },
  {
    "commit_message": "Added a search box with 'Meta' key\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "757fabad9a43f5322ed7b34f186ae854ee7fa35f",
    "commit_timestamp": 1707938460,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following tasks:\n\n1. Adds a new private field `_searchController` of type `TextEditingController`.\n\n2. Adds a `Visibility` widget to the `Row` widget of the `RenderBox` widget.\n\n3. Assigns a `Visibility.visible` flag to the `Visibility` widget based on the condition that the enum value of `commandVisibility` is equal to `VisibilityEnum.searchBox`.\n\n4. Adds a `TextField` as a child of the `Visibility` widget.\n\n5. Assigns various attributes to the `TextField` such as `autocorrect`, `controller`, `autofocus`, `enableSuggestions`, and `decoration`.\n\n6. Adds the `controller` attribute and assigns it"
  },
  {
    "commit_message": "Cleanup how the visibility of different modals\nin UI is handled. Use enum instead of bool\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "5d3ad14ee8d40e97c205b13dc670ffd47efb9bd9",
    "commit_timestamp": 1707937411,
    "code_diff": "",
    "code_summary": "The code diff accomplishes following changes:\n1. Changes the value of `git` pointer for `queryMatchingThreadsHash` from `9bbc45bc83ca21af54116a2bb2e65103340b178a` to `010f533458d1b4a1406a1d9a703a253b8881b249` which is a newer/updated version.\n\n2. Changes the value of `git` pointer for `AutoCompleteVisibility` provider from `cc9d6ba6733475225516e6abf203573898a8a1d7` to `e895c39f2f75d52169f37c060b3e4"
  },
  {
    "commit_message": "implemented api to get titles of threads after\nsemantic search. We don't want to transfer all threads\ndata to the frontend, so we only transfer the titles\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "67e93fed4cfe5213c4f1f8964a6e5fa51d907dda",
    "commit_timestamp": 1707930299,
    "code_diff": "",
    "code_summary": "diff\n \n- Multiple changes in this diff, but the goal is to alter the OpenAPI spec so we can search for titles as well as threads. Essentially we added a new API function, tested it, added new documentation to the OpenAPI yogurt documentation, and fixed up the autogenerated fromOpenAPI convertor Dart code (see below). We also had trouble so"
  },
  {
    "commit_message": "cleanup\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "50e374f7e671e988c2bdd4e46f713612dea94c8e",
    "commit_timestamp": 1707929587,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following two things:\n\n1. In backend/api/routes/threads/routers.py:\n    - Line 59: \"print(return_threads)\" is changed to \"#print(return_threads)\". This means that the line of code is now commented out and will not be executed. This could be useful for temporarily disabling a piece of code without having to delete it.\n2. In frontend/lib/screens/home.dart:\n    - Line 140: \"await testOpenApi();\" is changed to \"//await testOpenApi();\". Similar to the previous change, this means that the line of code is now commented out and will not be executed. This could be useful for temporarily disabling a piece of code without having to delete it."
  },
  {
    "commit_message": "ok. semantic search backend api works.\nnow add the frontend to it.\n```bash\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "aada91c7cfe2b8d61d505f8dd1d46e17704f28b7",
    "commit_timestamp": 1707929516,
    "code_diff": "",
    "code_summary": "The above code diff removes a print statement and a return statement from the function search_threads. The function now no longer prints a result and immediately returns without performing any other actions."
  },
  {
    "commit_message": "made semantic search function async because\nthe entire fastapi app is async\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "4161896e55d151dd07f9bb2170293cb1f4e0fd30",
    "commit_timestamp": 1707929142,
    "code_diff": "",
    "code_summary": "The above code diff achieves several things:\n\n1. In line 5-6, it imports a function called \"thread_semantic_search\" from the file \"search.py\" which is in the same directory as this file, and renames it as \"keyword_search\".\n\n2. In line 36, it adds the keyword \"async\" before the definition of \"keyword_search\" function, making the function an asynchronous one.\n\n3. In line 37, it adds the parameter \"query\" to the \"keyword_search\" function.\n\n4. In line 48-50, it calls the \"async def keyword_search(query, collection):\" function and passes the \"query\" and \"collection\" as arguments.\n\n5. In line"
  },
  {
    "commit_message": "Vector search using new embeddings collection works\nas expected. I am not too happy with the ranking\nof the search results though. I will need to look into\nthis further. The result that is ranked second\nshould be ranked first.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "7f536bfa7a09e03cb99235b13f8cf42383ac69f1",
    "commit_timestamp": 1707881441,
    "code_diff": "",
    "code_summary": "This code diff makes the following changes:\n\n1. In the file `backend/api/routes/threads/routers.py`, the limit for the `numCandidates` and `limit` parameters in the `pipeline` list of the `search_threads` function has been changed from `100` and `5` to `100` and `3` respectively.\n\n2. In the same file, the `path` parameter in the `pipeline` list has been changed from `thread_embedding` to `embedding`.\n\n3. In the same file, the `index` parameter in the `pipeline` list has been changed from `vector_index` to `thread_index`.\n\n4. In the file `backend/api/thread_embeddings.py`, a new function `semantic_search"
  },
  {
    "commit_message": "refactor code to have embedding as a separate module\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "5c1aa163c4f7cff10348005e763c0fa49c9be38b",
    "commit_timestamp": 1707875035,
    "code_diff": "",
    "code_summary": "The code diff above changes the way that embeddings are generated from the AzureOpenAI resource and replaces it with the new AzureOpenAI API. This involves creating a new function in the utils/embedding.py file that handles the generation of the embeddings using the correct API version and endpoint. The code in the thread_embeddings.py file has also been updated to use this new function instead of the old one. Additionally, the config init file has been updated to change the API version from \"2022-12-01\" to \"2023-05-15\" to match the new API version being used."
  },
  {
    "commit_message": "comment the code to accidently generate new\nembeddings. uncomment when needed.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "211798be096e96a9e7bf84d88e30a9a925fbb840",
    "commit_timestamp": 1707873854,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following changes:\n1. Moves the file `thread_embeddings.py` from the previous file path `a/backend/api/thread_embeddings.py` to the updated file path `b/backend/api/thread_embeddings.py`.\n2. Changes the code at lines 139 and 140 by replacing the `update_thread_creator()` function with a commented out version of the same function and updating the comment to mention the `update_thread_creator` function.\n3. Changes the code at line 143 by commenting out the `generate_thread_embedding()` function.\n4. Updates the comment at line 145 to mention the `generate_thread_embedding` function.\n5. These changes allow the code to still run the `update_thread_creator` and `generate_thread_embedding"
  },
  {
    "commit_message": "generated thread_embeddings in seperate collection\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "35528f75ac9c7116c919c4247016dcef3ad94dc1",
    "commit_timestamp": 1707873617,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following:\n\n1. Changes the file paths for the \"backend/api/thread_embeddings.py\" file.\n2. Updates the generate_embedding_new_api() function to return the embedding instead of printing it.\n3. Adds a new variable \"user_collection\" to store the \"users\" collection.\n4. Updates the generate_thread_embedding() function to also retrieve the email of the thread's creator from the \"users\" collection and add it to the generated embedding.\n5. Updates the generate_thread_embedding() function to update the \"destination_collection\" with the generated embeddings for each thread.\n6. Adds a new \"move_thread_embedding()\" function which moves the \"thread_embedding\" field from the \"source_collection\" to the \"destination_collection"
  },
  {
    "commit_message": "Now thread creator is gonna contain their name\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "0834d9ced894a083c78ef7680522bab7ef993cb3",
    "commit_timestamp": 1707864915,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following:\n\n1. Imports the function `get_user_name` from the `utils.db` module.\n2. Changes the `creator` field of newly created threads from the user ID to the user's full name.\n3. Changes the `creator` field of existing threads to a default name, \"Yogesh K. Soni\".\n4. Updates the thread embedding database with the new `creator` field. \n5. Adds the function `update_thread_creator` to the `thread_embeddings` module.\n6. Adds a call to the `update_thread_creator` function in the `main` function of the `thread_embeddings` module."
  },
  {
    "commit_message": "added user's email to the backend db\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "f39e6bc1ed0a08df35958cb68321174bcbdaaceb",
    "commit_timestamp": 1707864100,
    "code_diff": "",
    "code_summary": "The code diff acccomplishes several things:\n\n1. Imports the `datetime` module into the main module to help with tracking user login times on line 1.\n\n2. Updates the `secure_api()` function on line 44 by changing the `userName` variable name to `userObj` and adding an `await` keyword before the `get_user_by_id()` function call on line 46.\n\n3. Adds a new line 49 that updates the `email` variable with the `email` property of the `userObj` object.\n\n4. Adds a new block starting on line 53 that fetches the user's full name from the MongoDB database and updates the `fullName` variable on line 54.\n\n5. Adds"
  },
  {
    "commit_message": "minor cleanup\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "09b1252717d5c4099b509f0edc967edc146cbc60",
    "commit_timestamp": 1707859539,
    "code_diff": "",
    "code_summary": "This code diff modifies two different files: `backend/api/main.py` and `frontend/lib/screens/home.dart`. It makes changes to the `secure_api` function in `backend/api/main.py` and to the `_HomeScreenState` class in `frontend/lib/screens/home.dart`.\n\nIn `backend/api/main.py`, the diff removes the `print` statements and the `userDoc` and `fullName` checks. It also removes the `else` statement that prints \"user not found\". These changes make the code more efficient by removing unnecessary operations.\n\nIn `frontend/lib/screens/home.dart`, the diff replaces the separate calls to `getEmail` and `getUserName` with a single call to `getAndSetUserInfo` in the `initState`"
  },
  {
    "commit_message": "Now frontend gets the fullname of the user\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "bdbcf49a9307f76d38539d9fc1ccd3832b1136c9",
    "commit_timestamp": 1707859016,
    "code_diff": "",
    "code_summary": ""
  },
  {
    "commit_message": "Save user name and user id in mongodb\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "3bcb5fd45965df82381c2266701d19572ee44872",
    "commit_timestamp": 1707857998,
    "code_diff": "",
    "code_summary": "The code updates the user_name field in the database for the user with the given user_id, using the user_name value from the raw_user_info_from_provider object. It also imports the AsyncIOMotorClient class from the motor.motor_asyncio module and uses it to create a connection to the database."
  },
  {
    "commit_message": "We can get the name of signed in user\nfrom Google. But I don't know where to save it yet.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "a8a42fde5ebdb6d473a04fd65ca91b2d9c8e3214",
    "commit_timestamp": 1707807000,
    "code_diff": "",
    "code_summary": "1. The `diff` command is comparing the files `__init__.py` and `main.py` in the directory `backend/api`. This syntax helps to display the differences between the two files.\n\n2. The line `index ec3e00e..b5b8de0 100644` indicates the previous and current versions of the files being compared.\n\n3. The line `--- a/backend/api/config/__init__.py` indicates the old version of the `__init__.py` file.\n\n4. The line `+++ b/backend/api/config/__init__.py` indicates the new version of the `__init__.py` file.\n\n5. The `@@ -12,6 +12,8 @@`"
  },
  {
    "commit_message": "Get user info from 3rd party google signin\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "88802e19149b3017c5857b39d3366e4aa7e4b74a",
    "commit_timestamp": 1707805341,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following:\n\n- In the `__init__.py` file:\n\n  - Lines 37-44: Override the default thirdparty APIs so that the `thirdparty_sign_in_up_post` function is used instead. This function calls the original `thirdparty_sign_in_up_post` function and adds additional functionality after the user has successfully signed in.\n- Lines 63-64: Initialize and configure the `thirdparty` feature.\n  - Line 66: Override the default thirdparty APIs by passing in the `override_thirdparty_apis` function.\n- Lines 68-74: Add imports for the necessary Supertokens and thirdparty modules and classes that are needed to define the `override_thirdparty"
  },
  {
    "commit_message": "removed embeddings from thread collections.\nWe want to keep the thread collections as small\nas possible.\nNext: Store the embedding in a separate collection\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "56a9db3540800ee5523e5d7a772e555f75d3d761",
    "commit_timestamp": 1707771571,
    "code_diff": "",
    "code_summary": "This code diff makes changes to the \"backend/api/thread_embeddings.py\" file in a git repository. Specifically, it:\n\n- Imports the `UpdateOne` class from the `pymongo` module, in addition to `MongoClient` and `ReplaceOne`.\n- Adds a `move_thread_embedding()` function that moves thread embeddings from the \"threads\" collection to the \"thread_embeddings\" collection in the database. Any existing thread embeddings in the \"threads\" collection are removed.\n- Comments out the `generate_thread_embedding()` function, potentially indicating that it is not currently needed or should not be run.\n- Calls the `move_thread_embedding()` function in the `main()` function.\n- Adds documentation to the end of the file using the `"
  },
  {
    "commit_message": "dude! I am able to now do semantic search on the\nthreads!! I created embeddings offline for the\nthread content.\nNow clean this up and show it in a nice UI.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "a9bb894adc197af79aad6d107ededc6725cf68dd",
    "commit_timestamp": 1707681027,
    "code_diff": "",
    "code_summary": "It accomplishes several things:\n- It modifies the file `backend/api/routes/threads/routers.py` by changing line 49 from `def get_embedding(text):` to `def get_embedding(text):`.\n- It also adds a comment to Line 52 of `backend/api/routes/threads/routers.py` that says `#print(embeddings)`.\n- It adds a new file called `backend/api/thread_embeddings.py` with about 76 lines of code.\n- It modifies the existing file `frontend/lib/screens/home.dart` by replacing `plan` (which was on Line 118) with `thw thread with link to jira dataset` and the `testOpenApi` function with a call to that function, which now"
  },
  {
    "commit_message": "remove search query api call in the frontend\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "d78196610a03b533049f9a9f63b2382b1529b014",
    "commit_timestamp": 1707632631,
    "code_diff": "",
    "code_summary": "This code diff adds a comment to line 121, changing the `testOpenApi` method from an `await` to a comment. This removes the function call and instead adds a comment on it, effectively disabling that code for future use."
  },
  {
    "commit_message": "able to calculate embeddings of query from frontend\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "080833ed7e0a67d7a5e5b44dfd8a02e1914caaea",
    "commit_timestamp": 1707626101,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following:\n\n- Line 23-33 and line 36-41: Adds a new class `OpenAISettings` which contains settings related to the OpenAI API. These settings are retrieved from environment variables using the `BaseSettings` class from `pydantic`.\n- Line 50-51: Sets the OpenAI API key and endpoint retrieved from the environment variables.\n- Line 56-57: Sets the `api_type` and `api_base` to \"azure\" and the `api_version` to \"2022-12-01\" for the OpenAI API.\n- Line 63: Retrieves the deployment name from the `OpenAISettings` class.\n- Line 66-"
  },
  {
    "commit_message": "Atleast able to calculate embeddings for the given\nquery text. Query itself does not work.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "9806bc2c58c1ab084ec97640bc7e4ff75d2b0750",
    "commit_timestamp": 1707626060,
    "code_diff": "",
    "code_summary": "This code diff imports the `os` library and also imports the `openai` library. It also sets several environment variables related to the Azure OpenAI API. The `get_embedding(text)` function is called and the corresponding output is printed. The main use of this function is to get the embedding of the user query and then use that embedding to search for similar threads in the database. The previous code did not have this functionality, so this code adds it. The code also adds a call to the `testOpenApi()` function when the user presses a button, which will ultimately take the user to a journal screen. This function is not included in the code diff, so its purpose cannot be determined from the given information. Finally,"
  },
  {
    "commit_message": "tried vector search but it was not working\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "f35b17c5cafba0edd1e96d1d263392e6dce30167",
    "commit_timestamp": 1707613860,
    "code_diff": "",
    "code_summary": "The code diff is comparing two different versions of the same file \"routers.py\" and shows the changes that have been made in the second version compared to the first version.\n\nIn this specific case, the diff shows that the lines 39 to 46 have been added to the second version (which are not present in the first version). These lines contain a new function named \"search_threads\", an if statement and a return statement.\n\nAdditionally, there are also changes made in lines 49 to 73, where a new part of code is commented out and not present in the second version. This part of code is related to the \"pipeline\" and \"cursor\" variables, and it is replaced by a simpler \"return\" statement in"
  },
  {
    "commit_message": "remove testing of search api. now incorporate\nthe api into search screen\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "4fa5520c9e00d3d3a650a5123c2f3bc676840c11",
    "commit_timestamp": 1707591603,
    "code_diff": "",
    "code_summary": "The following code diff is used to modify the file specified from \"a/frontend/lib/screens/home.dart\" to \"b/frontend/lib/screens/home.dart\". It changes the file by adding context in lines 118 and 119 and by commenting out line 121. This change effectively removes the code related to calling the \"testOpenApi()\" function and instead navigates to the \"/journal\" screen. This could be useful if there were issues with the \"testOpenApi()\" function or if it was no longer necessary."
  },
  {
    "commit_message": "tested the search. it works with atmost 3 results\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "ac35f76eaf3aa565aa2589f830995c63a3d4026f",
    "commit_timestamp": 1707591399,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following changes:\n\n1. In the `search_threads()` function in the `routers.py` file, it comments out the previous method of finding threads by querying the `threads` collection in MongoDB using the `$text` operator, and replaces it with a new method that uses the `$search` operator and a custom index called `monkThreadIndex`.\n\n2. It adds a new function in the `routers.py` file called `threadTypes()`, which returns a list of thread types (identified by the `ThreadType` model) instead of individual threads.\n\n3. In the `splash.dart` file, it updates the text displayed on the `SplashScreen` to say \"Welcome to Monk!\""
  },
  {
    "commit_message": "implemeted a simple text search on the type field\nof the threads collection. Tested the API.\nNow, find a way to create index only once.\ncall the search API in the UI\nfind a way to search in the block content\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "821dbc75cd7a77e7775d26a021bf32cd84d530f8",
    "commit_timestamp": 1707544858,
    "code_diff": "",
    "code_summary": "The following code diff makes changes to two files:\n- `backend/api/routes/threads/routers.py`\n- `frontend/lib/screens/home.dart`\n\nIn `backend/api/routes/threads/routers.py`:\n- Line 19: Adds `response_description` for the endpoint `searchThreads`\n- Lines 21-25: Changes how the `threads` variable is assigned by using the `collection` variable\n- Lines 26-27: Prints the `threads` variable\n- Line 28: Returns a response using the `ThreadsModel` and `ThreadsModel` classes\n- Lines 37-38: Adds `response_description` for the enmpoint `threadTypes`\n\nIn `frontend/lib/screens/home.dart`:\n- Line"
  },
  {
    "commit_message": "created backend api to query strings in mongodb\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "ecdc89d472b7964b890ee84d1ea061ee551eedb9",
    "commit_timestamp": 1707543051,
    "code_diff": "",
    "code_summary": ""
  },
  {
    "commit_message": "built UI screen for search\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "de0dd4f310a54c5c6caa698fa27b0fd9a2356ceb",
    "commit_timestamp": 1707542497,
    "code_diff": "",
    "code_summary": "This code diff adds a new feature for the app, allowing users to search for threads by typing in a query. It creates a new file `search.dart` under the `frontend/lib/repo` directory, which contains functions for fetching matching threads from the server and a class for managing the query results. It also creates a new `SearchBar` widget and a `SearchResults` widget, which are both used in the `SearchModal` screen. It also updates the `thread.dart` file to include a new provider for fetching thread types."
  },
  {
    "commit_message": "example .env file added. real one .env is not committed because it has password\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "309c223a6c251c6371ef42361acffb0c28e5df3d",
    "commit_timestamp": 1707536478,
    "code_diff": "",
    "code_summary": "(\nThis code diff creates a \"new file\" called `.env.example` that includes three lines of code: `DEBUG_MODE=False`, `DB_URL=\"mongodb+srv://yksoni:<password>@monkcluster.lxt"
  },
  {
    "commit_message": "fixed a bug where commandTypes is fetched\nfrom the server before logging in.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "5c5577cf3fbec492e6d31d5b6f6baac654895eb1",
    "commit_timestamp": 1707536044,
    "code_diff": "",
    "code_summary": "This diff accomplishes the following tasks:\n1. Adds a comment to import the `Thread` library in the `frontend/lib/main.dart` file.\n2. Comments out a statement that creates a final variable `commandList` in the `build` method of the `MyApp` class in the `main.dart` file.\n3. Adds a comment to import the `HttpValidationError` library in the `frontend/lib/openapi/threads_api.dart` file."
  },
  {
    "commit_message": "Fixed bug where null value was being used for new\nthread type (thread does not exist so type not\navailable yet)\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "21335cef2378475505c59b5b1818876c345c5d13",
    "commit_timestamp": 1707028139,
    "code_diff": "",
    "code_summary": "The following code diff performs the following changes:\n- Renames the key in the returned map in `return {'command': command, 'title': title}` from `command` to `type`.\n- If `newThread[\"title\"]` is present in the `threadList.value`, it uses `threadList.value![newThread[\"type\"]!]` instead of `threadList.value![newThread[\"title\"]]!`."
  },
  {
    "commit_message": "Removed hardcoding of command type\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "39a490ba546c4da62011ad1092232e6616e0973d",
    "commit_timestamp": 1707027329,
    "code_diff": "",
    "code_summary": "1. The code diff modifies the import statements to import the `Thread` class instead of the `CommandParser` class from the repository.\n2. It also adds a `import 'package:frontend/repo/thread.dart';` statement.\n3. Inside the `main()` function, it changes the argument passed to `ThreadScreen` from `type: Commands.thread.name` to `type: commandList.value![0]`.\n4. The `build()` method of the `MyApp` class is changed from `build(BuildContext context)` to `build(BuildContext context, WidgetRef ref)`, and it now uses the `ref` parameter to watch the value of `fetchThreadTypesProvider`.\n5. The `ThreadScreen` is now"
  },
  {
    "commit_message": "Get list of commands from the backend instead of\nhardcoding them in the frontend.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "9c5b0279d1f19d97a4bc69448445142d3aa6546e",
    "commit_timestamp": 1707026938,
    "code_diff": "",
    "code_summary": "This code diff makes the following changes:\n\n- Changes the class `CommandParser` to have a constructor that accepts a list of strings, and assigns the passed-in list to its `commandList` variable.\n- Comments out the original `commandList` variable declaration and initialization.\n- Fixes an error in the `CommandTypeAhead` class where it was trying to pass in a list of strings to the `CommandParser` constructor, which is no longer needed.\n- Changes the variable `titlesList` to be a list of strings instead of a map, as the `fetchThreadsInfoProvider` now returns a list instead of a map."
  },
  {
    "commit_message": "Improved command pattern matching\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "83bf52c4dcc1af92993dd6a1e99712c7f6713a71",
    "commit_timestamp": 1707026018,
    "code_diff": "",
    "code_summary": "The code diff removes the forward slash (/) from the commandPattern variable if it starts with a slash, and then checks for matches in the list of commands starting after the first character. This allows for more accurate matching of commands, as some commands may be listed with a slash in front while others may not."
  },
  {
    "commit_message": "Display proper thread type and title in the screen by\nfetching it from the backend.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "45057b05b58139753c1ede78fbb46f21d8ad1060",
    "commit_timestamp": 1707021755,
    "code_diff": "",
    "code_summary": "json\n-//{\n-//  \"requestId\" : null,\n-//  \"responseMeta\" : {\n-//    \"statusCode\" : \"200\"\n-//  },\n-//  \"errorMeta\" : null,\n-//  \"data\" : \"{\\n  \\\"titles\\\" : [ \\\"TitleThis\\\", \\\"TitleThat\\\" ]\\n}\"\n-//}\n-// *```\n-\n-String _$fetchTitlesHash() => r'17f5b5b75d30c2ef0b9925605df2407b0af8eb85';\n-\n-@ProviderFor(fetchTitles)\n-final fetchTitlesProvider =\n-    AutoDisposeFutureProvider<List<String>>.internal(fetchTitles, defaultValue: null"
  },
  {
    "commit_message": "Fixed bug where null value was being used.\nonSelected works better now for title suggestions\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "7f7b52a768f1004872ea5ab9ed53a80afe728e64",
    "commit_timestamp": 1707014949,
    "code_diff": "",
    "code_summary": "This code diff changes the way the 'Titles' are suggested in the app. Previously, the entire command with the title was suggested, but now only the title is suggested. Additionally, it removes the variable 'selectedCommand' and instead uses the previously defined variable 'parser' to get the command name."
  },
  {
    "commit_message": "make the title search case-insensitive. Sometimes\nthe title selection is not working.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "650a6d5b08e79a11969ec63663393103c7b1c7ef",
    "commit_timestamp": 1706998315,
    "code_diff": "",
    "code_summary": "The code diff replaces the `option.contains()` method call with `option.toLowerCase().contains()` to ensure that the `contains()` method is case insensitive."
  },
  {
    "commit_message": "Able to switch between the different threads\nusing /go command\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "7addf5e02de8938c0b6b464461a51d4565c01016",
    "commit_timestamp": 1706997569,
    "code_diff": "",
    "code_summary": "The code diff removes the validation for unique thread titles in the `parseTitle` method, and instead adds additional checks in the `parseCommand` method. Specifically, for the `/new-*` commands, the code now enforces that the title must be unique for creating new threads. For the `/go` command, the code now verifies that the thread exists before allowing the user to navigate to it."
  },
  {
    "commit_message": "use pushReplacement, otherwise the Navigsation\nstack will become too large. Also, we don't need\nnavigation history because we will be using\n/go command anyways.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "b289ea7fbe2ca4d8f88742147d0bfa1790225186",
    "commit_timestamp": 1706981753,
    "code_diff": "",
    "code_summary": "This code is replacing the code at line 62 in the file `commandbox.dart` in the `frontend/lib/screens` directory with the code at lines 62 to 64. This will replace the code that was previously responsible for pushing a screen with the new thread's title and command, with code that will first set the visibility of the auto complete feature to false and then push the new thread's title and command on the screen. This change in functionality may be intended to improve the user experience or fix a bug. By using `pushReplacement` instead of `push`, the previous screen will be removed from the stack, so the user will not be able to navigate back to it from the new screen."
  },
  {
    "commit_message": "Create new thread screen when command is successful\nImpactful commit with fewest lines of code.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "4bb99e9e4951581c952115de0d9d680f3ad13d5a",
    "commit_timestamp": 1706981250,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following:\n- Imports the \"ThreadScreen\" widget from the \"screens/thread.dart\" package.\n- Changes the \"currentThreadProvider.call()\" function call to the \"Navigator.push()\" function call, which navigates to the \"ThreadScreen\" widget when a thread is selected from the typeahead options.\n- Removes the unnecessary \".notifier\" function call from the \"currentThreadProvider\" call."
  },
  {
    "commit_message": "cosmetic changes\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "f94a1b826842e78eca87cd8b40515577ed0804f3",
    "commit_timestamp": 1706979913,
    "code_diff": "",
    "code_summary": "- The diff is setting field values on a class, creating a map of fields to current values and the suppressing expected information that the original modifier didn't support.\n- The diff aims at changing the behavior of the code, specifically on lines 38-39 where it is removing a selected title variable.\n- The diff also includes logic for handling exceptions and displaying them as a snack bar at line 55, adding a new field \"newThread\" on line 64, and setting the thread title and command in lines 71-72.\n- The diff also includes commented out code at lines 78-79 that seems to be setting the current thread provider with data from the newThread variable."
  },
  {
    "commit_message": "removed unnecessary notifier. Code getting too complicated.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "e0b171eb8010d6e1a02da0ab4e82dc18296e79f7",
    "commit_timestamp": 1706929567,
    "code_diff": "",
    "code_summary": "This code diff appears to be separating out the `CurrentCommand` provider into a separate file to improve the organization and readability of the code. It also tweaks the `validateCommand` function to no longer rely on `currentCommandNotifier`, instead returning a `Map` with the command and title values. The `CommandTypeAhead` also changes to use the `selectedCommand` instead of fetching from the provider."
  },
  {
    "commit_message": "Fetch the list of titles from the backend and\ndisplay them in the command box in the frontend.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "dfa449690398532d0d257a1d71aa7b6b7b32b6ec",
    "commit_timestamp": 1706929010,
    "code_diff": "",
    "code_summary": "The code shows some modifications of a file called *commandparser.dart* (lines 1 - 26 and lines 52 - 73). It also shows modifications of a file called *titles.dart* (lines 27 - 50) and the creation of a new file called *titles_test.dart* (lines 76 - 103). Finally, it shows modifications to a file called *commandbox.dart* (lines 104 - 119).\n\nIn summary, the code is intented to generate a file called *commandparser.g.dart* (lines 5 - 18) and make some modifications to three files to add functionality to a command parser used in a Flutter application. Specifically, the code adds a new method called `"
  },
  {
    "commit_message": "new api to get all the titles\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "c9882fa5ef6c45f2ce5ed09b3a040942cd40f1b7",
    "commit_timestamp": 1706926707,
    "code_diff": "",
    "code_summary": "The code diff shows changes that were made to the following 4 files:\n1. backend/api/openapi.yaml:\n- Added \"TitleModel\" to the components section\n- Added a \"/titles\" endpoint to the paths section with the \"TitleModel\" as the response\n2. backend/api/routes/threads/models.py:\n- Added the \"TitleModel\" class with a list of titles as the only required property\n3. backend/api/routes/threads/routers.py:\n- Added a \"/titles\" endpoint to the router with \"TitleModel\" as the response\n4. frontend/openapi/:\n- Added \"TitleModel.md\" and \"TitleModel.dart\" files to the model documentation and model classes list, respectively\n- Updated"
  },
  {
    "commit_message": "Moved journal.dart to more generic thread.dart\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "9c394088b4f5cce75d428de13ce39314612f3312",
    "commit_timestamp": 1706922110,
    "code_diff": "",
    "code_summary": "Fixes an issue where the app was creating a journal screen instead of a thread screen when navigating to the '/journal' route. The changes also renamed the journal screen to the thread screen and updated relevant imports. The changes also update the title of the app bar to display the current thread type and title instead of just \"Journal\"."
  },
  {
    "commit_message": "Minor cleanup. Don't need the complicated steps before\nserialization.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "c98b11c5332920ea730ccbf61e108f7d580049e0",
    "commit_timestamp": 1706918809,
    "code_diff": "",
    "code_summary": "This code diff removes an original version of returning thread and responding with serialized json object of updated_thread."
  },
  {
    "commit_message": "Ok fixed backend and frontend automatically got fixed.\nInvestigate why serialization issue was happening\nin create block api but not create thread api.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "5d94a4e71c75202089651c752651847f0b432ba4",
    "commit_timestamp": 1706915738,
    "code_diff": "",
    "code_summary": "This code diff creates the variable `ret_thread`, which holds a `ThreadModel` based on the `updated_thread` argument. The router then converts `ret_thread` to a JSON compatible format and returns that as opposed to returning `updated_thread` as the JSON response."
  },
  {
    "commit_message": "Good. Now new thread is being created and new block\nwas also saved to the new thread in the backend.\nNow resolve all the serializing issues at the backend first.\nThen the frontend will be able to display the new thread\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "13d73cf8b440630cec3599a59b951de64110fd9c",
    "commit_timestamp": 1706914643,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following:\n\n1. Changes the `Date` class to import from `BaseModel` instead of `AbstractBaseModel`.\n2. Adds a typechecker for the `threadType` parameter in the `allowed_thread_types` function.\n3. Fixes a bug in the `allowed_thread_types` function where the `threadType` was being checked against the list of string values of `THREADTYPES` instead of the actual `THREADTYPES` enum values.\n4. Adds the `Annotated` annotation to the `ThreadType` variable, using `AfterValidator` to validate the type against the `allowed_thread_types` function.\n5. Adds a blank line before the `old_thread` variable is defined in the"
  },
  {
    "commit_message": "Created an AsyncNotifier to manage the ThreadState.\nThe stuff doesn't work yet because the backend is broken.\nNeed to figure out what's happening.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "addea70841b633330c278e3a057ecb282dd4b32f",
    "commit_timestamp": 1706913058,
    "code_diff": "",
    "code_summary": "The diff code is showing the changes made to the file `frontend/lib/repo/thread.dart`. It adds a new function, `createOrGetThread()`, that creates a thread and returns its data. It also modifies the `build()` function of the `CurrentThread` class to use this function and update the thread state accordingly.\n\nAdditionally, the code also includes changes to the auto-generated `thread.g.dart` file, which includes updates to the `build()` function of the `CurrentThread` class, as well as modifications to the `CurrentThreadProvider` and `CurrentThreadProviderElement` classes.\n\nThe diff also includes minor changes to the `CommandBox` and `JournalScreen` screens, which use the `createBlock()` function"
  },
  {
    "commit_message": "Made wholesale changes to the frontend to use ThreadModel.\nIt's a miracle that the code did not crash and burn.\nThough the code doesn't really work.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "3a5c402b3d8288d170d3ca0ead9a0a0ba6dd44ee",
    "commit_timestamp": 1706856348,
    "code_diff": "",
    "code_summary": "+          description: Validation Error\n+      summary: Update Thread"
  },
  {
    "commit_message": "Ok. Able to retrieve the thread blocks from MongoDB.\nNow I need to remove the 'journal' hardcoding in the frontend\nand replace it with a generic thread. That means Block and thread\nclasses need to be combined. Also consider removing BlockCollection if\nit is not needed.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "3597e2918bce3fe3137cbfc584154b9830b5e26d",
    "commit_timestamp": 1706841954,
    "code_diff": "",
    "code_summary": "This code diff makes the following changes:\n\n1. Adds a comment explaining how to store `block` as a JSON string in the database.\n2. Changes the query to a `.find_one()` instead of `.find()` and updates the subsequent code to return a 404 response if the document is not found.\n3. Removes the `batch_size` and converts the cursor directly to a list of dictionaries.\n4. Updates the `ret_thread` variable to be a `BlockCollection` object instead of a list.\n5. Reorders some code for readability."
  },
  {
    "commit_message": "Ok. Now able to save a block to the thread.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "72d76c0846eaafa56386280eff8f8f1cb4b7f8da",
    "commit_timestamp": 1706837243,
    "code_diff": "",
    "code_summary": "diff\nThe code diff adds functionality to the generate_yaml.sh script and the frontend lib by modifying its blocks.dart, README.md, BlocksApi.dart, test/threads_api_test.dart files. More details are given below: \n\n1. The code lines ` python extract-openapi.py main:app` are added in the script to run the `extract-openapi.py` file, which generates the OpenAPI specification into the `openapi.yaml` file. \n\n2. The `file_path` variable is added to specify the file path as *openapi.yaml*. \n\n3. `sed` command is used to make certain changes to the *openapi.yaml* file.\n\n4. This command follows the structure `sed -i '/pattern1,/"
  },
  {
    "commit_message": "Create journal thread func in backend.\nNext step: create block to this thread.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "910fe0013a013dc0bc1b1b874e40fa1747621c98",
    "commit_timestamp": 1706820180,
    "code_diff": "",
    "code_summary": "The above code aims to optimize the get_journal_by_date function by creating a new create_new_thread function to check for existing journal threads and return them if they exist, or create a new thread if it doesn't exist. This avoids multiple queries to the database and improves performance."
  },
  {
    "commit_message": "Ok. At least empty journal thread is being returned.\nTodo: return Thread object instead of BlockCollection.\nThen ThreadScreen will construct the thread from received object.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "d4369b09e826b8d18bc905afb5d36b2ab002d81c",
    "commit_timestamp": 1706816394,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following:\n1. It changes the function name and the endpoint of the \"getBlocksByDateBlocksGet\" function to \"getJournalByDateJournalGet\".\n2. It changes the variable name \"d\" to \"date.date\" in the \"get_journal_by_date\" function.\n3. It adds a new line to convert the pymongo cursor to a list of dictionaries.\n4. It changes the argument \"modelDate\" of the \"getJournalByDateJournalGet\" function to \"modelDate: modelDate\", ensuring consistency with the naming conventions in the codebase."
  },
  {
    "commit_message": "Created a new API to get the journal threads.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "5b2c9f4a06da2c6081e77cdbdc9338cefedcc25a",
    "commit_timestamp": 1706811236,
    "code_diff": "",
    "code_summary": "diff\n+    // String msg\n     test('to test the property `msg`', () async {\n       // TODO\n     });\ndiff --git a/pre-commit-config.yaml b/pre-commit-config.yaml\nindex 481183c..95ec2fa 100644\n--- a/pre-commit-config.yaml\n+++ b/pre-commit-config.yaml\n@@ -53,8 +53,8 @@ repos:\n     hooks:\n     -   id: check-yaml\n         files: \\.yaml$\n-    - id: go-fmt\n-      name: Gofmt\n+    - id: go-fmt-diff\n+      name: Gofmt-diff\n       entry: gofmt\n       language: system"
  },
  {
    "commit_message": "Added backend validation for ThreadType\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "9a6ac7bc652639be5c5ee02b7b6948639449f2ff",
    "commit_timestamp": 1706799817,
    "code_diff": "",
    "code_summary": "i``````onError _$ValidationErrorFromJson(\n           (v as List<dynamic>?)?.map((e) => e as String).toList(),\n         ),\n         msg: $checkedConvert('msg', (v) => v as String),\n-        type: $checkedConvert(\n-            'type', (v) => $enumDecode(_$ThreadTypeEnumMap, v!)),\n+        type: $checkedConvert('type', (v) => v as String),\n         );\n     return val;\n   }, fieldKeyMap: const {'loc': 'loc'}, unknownKeys: const ['msg', 'type'])));\n@@ -32,8 +31,7 @@ Map<String, dynamic> _$ValidationErrorToJson(ValidationError instance) {"
  },
  {
    "commit_message": "Fixed the openapi generator errors.\nIt is due to pydantic/fastAPI generating AnyOf in the opebapi.yaml file.\nmanually fixed the openapi.yaml file to remove AnyOf\nthen ran the regenerate_api.sh on backend and frontend.\nThis sucks\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "de4c35a27ff69492b5bc9f595afe0a1fcf36e96f",
    "commit_timestamp": 1706758568,
    "code_diff": "",
    "code_summary": ""
  },
  {
    "commit_message": "Cleaning up the backend. Now issue with api code generation.\nArghh\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "be66f3c9e2b5d86ee42fd7f93061d770ac0ffac7",
    "commit_timestamp": 1706751625,
    "code_diff": "",
    "code_summary": "diff\n+   \n\n\ndiff --git a/backend/api/main.py b/backend/api/main.py\nindex 37dd5b8..7007223 100644\n--- a/backend/api/main.py\n+++ b/backend/api/main.py\n@@ -7,8 +7,7 @@ import uvicorn\n from motor.motor_asyncio import AsyncIOMotorClient\n from config import settings\n \n-from routes.tasks.routers import router as tasks_router\n-from routes.blocks.routers import router as blocks_router\n+\n from routes.threads.routers import router as threads_router\n \n from contextlib import asynccontextmanager\n@@ -63,9 +62,7 @@ async def shutdown_db_client():\n     app.mongodb_client.close()\n \n \n-app.include_router(tasks"
  },
  {
    "commit_message": "fixed auto-generated documentation for threads endpoint\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "63ace3f934358d71b263ce1da93f0e8d138f6ee2",
    "commit_timestamp": 1706748290,
    "code_diff": "",
    "code_summary": "The following code diff adds the following functionality to the code base:\n\n- Line 16 - Includes the `Response_Model` keyword argument as `ThreadModel` in the `create_thread` function.\n- Line 18 - Adds the keyword argument `thread_data` which uses the `CreateThreadModel` class as a parameter.\n- Line 19 - Adds the keyword argument `session` which uses the `SessionContainer` class and `Depends` function with the `verify_session` function as a parameter.\n- Line 32 - Includes the `Response_Model` keyword argument as `ThreadModel` in the `update_thread` function.\n- Line 34 - Adds the keyword argument `title` with type `str` and `thread_data"
  },
  {
    "commit_message": "status quo restored.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "bb371a9ea220ceb1f99c06e2d29f0c85c19cb1e4",
    "commit_timestamp": 1706742296,
    "code_diff": "",
    "code_summary": "The code diff produces two changes in the specified files:\n- In `backend/api/routes/blocks/routers.py`, lines 24-26 replace the line `block = jsonable_encoder(block)` with code that passes `block` through a method called `model_dump()`, and then assigns the result to `block`. A second new line replaces `await create_mongo_document(block, ...)` with a similar method call on `jsonable_encoder`. The result is that the original `block` is manipulated and passed through `jsonable_encoder` twice before being used in the call to `create_mongo_document`.\n- In `backend/api/utils/db.py`, line 27 inserts a `print()` statement that outputs the value of a `query"
  },
  {
    "commit_message": "fix issues with serialization. Why is blocks no longer\nable to get data? must be database issue\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "e7bb90d552f99f4652387ec74c2ddbaf15bac2f1",
    "commit_timestamp": 1706741047,
    "code_diff": "",
    "code_summary": "The given code snippet modifies two files:\n\n* Changes `json_util.dumps` to `jsonable_encoder`\n\n  * `dumps` is an [unsafe serializer](https://fastapi.tiangolo.com/advanced/response-directly/#json_util.html), while `jsonable_encoder` is a safe encoder that FastAPI provides.\n\n* Changes `blockId` to `title` and `modelDate` to `date`\n\n  * `blockId` and `modelDate` were not being interpreted in a way that communicates their intended use to the users of the API.\n\n  * The new code uses the more intuitive terms.\n\nIn the first block, `content` is changed from `json_util.dumps(created_block)` to `jsonable_encoder"
  },
  {
    "commit_message": "Created backend code for threads. Still need to add the frontend code.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "62011a904bfba5a6294d7231daaf36e00da46227",
    "commit_timestamp": 1706730294,
    "code_diff": "",
    "code_summary": "\"content\": \"This is the content of the block\",\n+                                            \n+                                            }\n+                                        ]\n+                                    }\n+                                ]\n+                                }\n+                              }\n+                        )\n\\ No newline at end of file"
  },
  {
    "commit_message": "go back to thread after new command.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "1c0ad8b110c33fd605907ebf98aea011b330c808",
    "commit_timestamp": 1706643510,
    "code_diff": "",
    "code_summary": "This code diff adds or subtracts lines of code between two different code states, potentially modifying the state depending on changes to any of the affected lines. In this specific example, the code added or removed within the @@ -56,9 +56,9 @@ section of the diff may modify the visibility of a command based on whether or not it is successfully validated, and the ref.read(autoCompleteVisibilityProvider.notifier) parameter may modify the state of a command based on a specific condition."
  },
  {
    "commit_message": "Handled selection of title. Also added a default\ntitle so that it is easier to test. Next step is to sync\nwith the backend.\n1. Titles are sent to the backend and read on demand.\n2. New threads are created with a title.\n3. /go command can accept existing titles and changes the thread context.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "0b1d3ca59de03a8ce564d0b8527e3143ecbac445",
    "commit_timestamp": 1706593600,
    "code_diff": "",
    "code_summary": "This notates differences between two versions of the source code using the `diff` command. It changes the Titles class to return a list containing only \"Journal\" instead of an empty list. It also removes some code in the CommandTypeAhead class that handled selecting a command from the typeahead suggestion."
  },
  {
    "commit_message": "upgrades\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "e0eaf4b5565255f904176d1d39d599701cf9a637",
    "commit_timestamp": 1706585483,
    "code_diff": "",
    "code_summary": "The code diff changes the versions of various dependencies in the project's `Podfile.lock` and `pubspec.lock` files. This could potentially update the project to use newer versions of these dependencies. The code also adds a new file, `frontend/macos/Runner.xcodeproj/project.pbxproj`, and changes the shell script to run during the build phase. These changes may help to improve the functionality or performance of the project."
  },
  {
    "commit_message": "cleanup\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "e434c969ee6ec9c7f4e50175f7d8daa2f475370d",
    "commit_timestamp": 1706585305,
    "code_diff": "",
    "code_summary": "In summary, the code diff includes the following changes:\n- Changed the file `.DS_Store` in the directory `a` to match the file in the directory `b`\n- Changed the constant `containerWidth` in `frontend/lib/constants.dart` to be a constant (`const`)\n  - This means that the value cannot be changed at runtime, and is more efficient than a regular variable\n  - A `TODO` comment was also added to eventually make `containerWidth` a provider\n- Changed the `key` field in several `MainObject` constructors to `super.key`\n  - This is a more concise and readable way to call the superclass's constructor with the same value for the `key` field\n- Removed some"
  },
  {
    "commit_message": "Adding automated test for titles provider. works.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "a888317ed9bd3994d5b6a7e21eaf9b5f4b281f21",
    "commit_timestamp": 1706560270,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following:\n\n1. Adds a line in the imports of `repo/titles.dart` to import the `screens/commandbox` package.\n2. Removes a line in `repo/titles.dart` to import the `screens/commandbox` package.\n3. Adds a new file `repo/titles_test.dart` with testing code.\n4. Adds the `coverage` and `node_preamble` packages as dev dependencies in `pubspec.lock`.\n5. Adds the `shelf_packages_handler` and `shelf_static` packages as transitive dependencies in `pubspec.lock`.\n6. Adds the `source_map_stack_trace` and `source_maps` packages as dev dependencies in `pubspec.lock`.\n7. Adds the"
  },
  {
    "commit_message": "Removed watch on titlesProvider. It's not really needed\nas the refresh logic is handled by TypeAheadField.\nNow need to figure out how to keep titles data across screen\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "b20da7a70ccdba46c9da29f48c6f028a1f5ca2c8",
    "commit_timestamp": 1706556673,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following changes:\n\n1. Removes the code that prints the titles from `frontend/lib/repo/commandparser.dart`. \n2. Removes the `print()` statement that prints the selected command from `frontend/lib/screens/commandbox.dart`.\n3. Removes the `pattern` and `titles` variable and the `print()` statements related to them from `frontend/lib/screens/commandbox.dart`.\n4. Changes the `TypeAheadField` in `frontend/lib/screens/commandbox.dart` to use the `titlesNotifier` instead of `titles` for the `patternMatchingTitles` function."
  },
  {
    "commit_message": "title suggestions are now shown in the command box\nExtremely buggy. Titles do not persist if I navigate to another scree.\nI have added ref.watch on titlesProvider. Is it needed?\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "ac2db53316e1bb06b0d5212a05be4ca4fd639a01",
    "commit_timestamp": 1706555565,
    "code_diff": "",
    "code_summary": "1. The code diff creates a new CommandParser class which does not require a WidgetRef parameter in its constructor. The original CommandParser class had a constructor that took in a WidgetRef. This allows the CommandParser class to be used outside of the Flutter environment, making it more modular and reusable.\n\n2. The code diff changes the parseTitle method in the CommandParser class to take in a titlesNotifier parameter. This allows the CommandParser class to access and manipulate the TitlesProvider's state without needing to directly access the WidgetRef or any other dependencies. This also makes the CommandParser class more testable, as the titlesNotifier can be easily mocked.\n\n3. The code diff adds a validateCommand method to the CommandParser class, which"
  },
  {
    "commit_message": "Trying to add typeahead suggestions for titles.\nDoes not work yet.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "826b87c82c4b7a3fb28bb9f11cf0756f4681ce49",
    "commit_timestamp": 1706484256,
    "code_diff": "",
    "code_summary": "This diff accomplishes two things:\n (1) in ```main.dart```, the CommandParamScreen route is removed from the ```routes``` map. This means that the CommandParamScreen is no longer accessible within the app.\n (2) in ```commandparser.dart```, a new method ```patternMatchingTitles``` is added which searches for titles that contain the given pattern (which starts with the ```#``` symbol). This method is then used in the ```CommandTypeAhead``` widget to suggest titles when the user types a command with a title in the command box. This provides better functionality for matching titles with commands. Additionally, the method removes the ```AlphaNumericTitle``` class and instead works with strings."
  },
  {
    "commit_message": "Added hint text to command box\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "79a4c5efd2d8b9c7ebec84e9246d5dcada2f96bb",
    "commit_timestamp": 1706482430,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following:\n\n1. Adds a new \"CommandHintText\" class to the project. This class is used to store and retrieve the hint text that appears in the command box.\n2. Defines a new \"commandHintTextProvider\" provider that creates and manages the CommandHintText instance.\n3. Makes use of the new provider in the \"CommandBox\" widget to display the hint text above the command box.\n4. Removes the \"commandOption\" text field from the \"CommandBox\" widget, as it is no longer needed.\n5. Adds a new \"set\" method to the \"CommandHintText\" class that allows the hint text to be updated.\n6. Removes the onFieldSubmitted function from the"
  },
  {
    "commit_message": "Added command validation on command submit action\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "2ca4e8493bd990433b343817cb4e3b7a7be8e90d",
    "commit_timestamp": 1706481705,
    "code_diff": "",
    "code_summary": "The code diff updates the command box input field's onChanged event handler to validate the entered command using the parser's validateCommand method. If the command is valid, then the onCommandSelected method is called. If the command is not valid, then a snackbar is shown with the error message."
  },
  {
    "commit_message": "Started to use CommandParser to parse the\ncommandbox input. First show typeahead for commands.\nNext step is to parse the arguments and validate the entite command.\nif the user presses #key after a valid command is entered, then show the\nexisting titles. Although /new-commands won't allow the existing titles.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "5b5a04dbc935659bdfada04f2fa00eda1a3137ef",
    "commit_timestamp": 1706477200,
    "code_diff": "",
    "code_summary": "The diff removes the import of `flitter_context_menu` from `commandbox.dart` as it is no longer used, renames the `Ref` object in `commandparser.dart` to `WidgetRef` and fixes every line in this file that references `Ref` to `WidgetRef` too, adds a new method `patternMatchingCommands` to the `CommandParser` class in `commandparser.dart` and the necessary boilerplate code in `titles.g.dart` and implements it in `commandbox.dart` so that searching for a command shows a list of possible matches instead of a list of available commands."
  },
  {
    "commit_message": "Few more features to commandparser\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "4b2d00fa252b83029a20c68e3370ef23833e5d03",
    "commit_timestamp": 1706468902,
    "code_diff": "",
    "code_summary": ""
  },
  {
    "commit_message": "Add a CommandParser\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "dbd552b134b71f78cf7d303ec4588c00865d4ec5",
    "commit_timestamp": 1706459266,
    "code_diff": "",
    "code_summary": "This code snippet creates a class called `CommandParser` and defines the `CommandParser` constructor, which takes a list of strings as a parameter. The code also implements a method called `parseCommand`, which takes in a `command` string as an argument and parses it for various things such as ensuring that the command starts with a forward slash, splitting it into different parts, checking for alphanumeric characters and uniqueness. The `isAlphanumeric` and `isUnique` methods are helper methods used by the `parseCommand` method to check for alphanumeric characters and uniqueness, respectively."
  },
  {
    "commit_message": "Removed borders from commandbox. Added way to move\nthe focus node to the next textfield when the user chooses\nthe command.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "b2e4ef9814409f708e8aeb0461e95be70a0271f7",
    "commit_timestamp": 1706424035,
    "code_diff": "",
    "code_summary": "This code diff makes the following changes to the \"commandbox.dart\" file:\n\n1. Adds a new variable `_commandFocusNode` of type `FocusNode` and assigns it to a new `FocusNode` instance.\n2. In the `onCommandSelected` method, the `_commandFocusNode` is moved to the next focus, to switch the focus from the command input field to the option input field.\n3. The `TypeAheadField` widget is updated to assign the `_commandFocusNode` to its `focusNode` property.\n4. Adds a new variable `_optionFocusNode` of type `FocusNode` and assigns it to a new `FocusNode` instance.\n5. In the `build` method,"
  },
  {
    "commit_message": "Now the selected option is displayed in the command box\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "24cbcbb39188df2832bc31974148474c454c8d01",
    "commit_timestamp": 1706335523,
    "code_diff": "",
    "code_summary": "The code diff includes changes to two files - \"backend/fastapi/routes/blocks/routers.py\" and \"frontend/lib/screens/commandbox.dart\". The changes made are:\n\n1. In \"backend/fastapi/routes/blocks/routers.py\":\n    - Line 176: The code was modified to call the function \"get_mongo_documents_by_date\" with the arguments \"date.date\" and \"request.app.mongodb[\"blocks\"]\".\n    - Line 179: The code was modified to create a new BlockCollection object named \"ret_block\" using the returned data from the \"get_mongo_documents_by_date\" function.\n    - Lines 181-183: The print statements for \"date.date\" and \"ret_block\" were deleted."
  },
  {
    "commit_message": "default value of command textfield is \"/\"\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "7bb8955b038bb2f2d3f140e75b18df8dab5458c1",
    "commit_timestamp": 1706322163,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following changes:\n\n1. Changes the file path from \"a/frontend/lib/screens/commandbox.dart\" to \"b/frontend/lib/screens/commandbox.dart\"\n2. Changes the index from \"1d5d55e\" to \"096eeb1\"\n3. Changes the code between lines 83 to 83, from \"class CommandTypeAhead\" to \"class CommandTypeAhead extends ConsumerWidget\"\n4. Changes the text in line 87 from \"controller: controller\" to \"controller: controller..text = '/'\"\n5. Adds a comment in line 90."
  },
  {
    "commit_message": "Removed unnecessary Column widget\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "451672384561f3b4eb5e05d7980760554f2d4a3d",
    "commit_timestamp": 1706320252,
    "code_diff": "",
    "code_summary": "The diff contains code changes that make the source and target files identical. It seems like it changes comment indentation, changes indentation from tabs to spaces, and removes some small padding. Essentially, the author tidied up the code as it originally ran over the indentation margin for readability and removed some unnecessary spaces."
  },
  {
    "commit_message": "Removed AutoComplete<String>\nJust using TypeAheadFiled Now\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "b1aa6f263b18f945514b83dbeea29f89262d8929",
    "commit_timestamp": 1706320109,
    "code_diff": "",
    "code_summary": "The code accomplishes a few things:\n\n- It renames a variable, MyTypeAhead, to CommandTypeAhead to make it more meaningful.\n- It creates a new function, onCommandSelected, which prints out the selected command and updates two providers: currentCommandProvider and autoCompleteVisibilityProvider. The currentCommandProvider is set to the command value from the list of commands, and the autoCompleteVisibilityProvider is set to false.\n- It removes some code from the MyTypeAhead widget's onSelected function and instead calls the new onCommandSelected function. This improves readability and reduces unnecessary code.\n- It creates a new widget, AutoCompleteCommand, to handle the autocomplete feature in the command box. This widget uses the Autocomplete widget to display a list"
  },
  {
    "commit_message": "Tried out TypeAheadField from flutter_typeahead package.\n It works well, but it has weird issue. The selected suggestiion\n is not shown in the text field.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "267a4153a60d3c4721d01b788410cff98cd091e4",
    "commit_timestamp": 1706316641,
    "code_diff": "",
    "code_summary": "The following code snippet is creating a typeahead field, which allows users to enter a command and get suggestions based on previous commands. This includes the following changes:\n\n1. Importing necessary packages: `dart:async`, `flutter_typeahead`\n2. Creating a `ConsumerWidget` class that contains a `TextEditingController` to manage the input text.\n3. The `TypeAheadField` widget is used to create the typeahead field.\n4. The `suggestionsCallback` is used to provide the matching suggestions based on the entered text.\n5. The `itemBuilder` is used to display the suggestions as list tiles.\n6. The `onSelected` function is used to handle the selection of a suggestion, setting the input text to"
  },
  {
    "commit_message": "now able to cleanly create new commands with autocomplete.\nstill need to use the tab to select the command, but it works.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "57727233040430d1a9a7e7b06d8e384b3cea8d2e",
    "commit_timestamp": 1706308671,
    "code_diff": "",
    "code_summary": "The following code diff accomplishes a few things:\n\n1. Changes an enum name from \"think\" to \"new-thought\"\n2. Changes the command URL prefix to /new- for all given commands\n3. Changes the command autofocus to true\n\nThese changes allow for an improved user experience and consistency in naming and command creation within the app."
  },
  {
    "commit_message": "So interestingly Autocomplete has an option to\nprovide a textfield widget. So I don't need to complicate\nmy life having 2 textfields. I can just use one and do\nAutocomplete based on certain conditions.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "caf7124b32a749b3cb39075963c20608d314e776",
    "commit_timestamp": 1706298305,
    "code_diff": "",
    "code_summary": "The following code diff adds an extra widget, named `Autocomplete`, and a text field in the `build()` function. It sets a border, hint text, and a shift+enter shortcut for saving and a slash shortcut for commands."
  },
  {
    "commit_message": "Awesome, now we have well functioning command selector\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "a3aefefbcc8aed85ef78931d836a3cb05dc54fdf",
    "commit_timestamp": 1706251503,
    "code_diff": "",
    "code_summary": "This code diff accomplishes several things:\n\n1. Changes the content of the `optionsViewBuilder` method. The method now displays the options in a `ListView` instead of a `Column` of `ListTiles`. This makes the options scrollable and allows for more control over the layout and appearance of the options.\n\n2. Adds a new `optionsBuilder` method. This method is responsible for providing the list of options to be displayed in the `ListView` in `optionsViewBuilder`.\n\n3. Uses the `optionsMaxHeight` property to set a specific height for the options list. In this case, the options list will have a maximum height of 200.0.\n\n4. Changes the layout of the `optionsViewBuilder`"
  },
  {
    "commit_message": "Fixed the placement of options popup\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "3eabc328a23ce50e455d461bd6a9c882602bff33",
    "commit_timestamp": 1706250887,
    "code_diff": "",
    "code_summary": "This code modifies the build method to add a new options view to an existing Autocomplete widget and add options to the list to be displayed. It also adds styling to the options view and sets its maximum height."
  },
  {
    "commit_message": "Using AutoComplete to display commands. Positioning\nof options is out of whack. Need to fix that.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "49e48a435534f486e18bf242687385cf86a46e6a",
    "commit_timestamp": 1706249993,
    "code_diff": "",
    "code_summary": "I's a diff to add an AutoCompleteVisibility class and use it in the \"CommandBox\" widget. This should make the component more maintainable."
  },
  {
    "commit_message": "- Added Title provider. Projects, ideas, tasks, etc.\nall will have title. Does not work yet.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "55307b3c57b064997443d8045417afeb21f7d71e",
    "commit_timestamp": 1706237671,
    "code_diff": "",
    "code_summary": "the code adds a new screen to our login app, the screen added is to help top level users access specific feature by entering a command\n\n## Part 3\n\n\n1. What is a dependency?\nA dependency is an external module or component that is required by a program to function correctly. It is an abstraction of the resources and services needed by a program to run. Dependencies can include libraries, frameworks, databases, and other software components.\n\n2. How does dependency injection help manage dependencies?\nDependency injection is a technique used to manage dependencies in a software system. It allows for external dependencies to be \"injected\" into a program at runtime, rather than being explicitly included in the code. This helps to decouple a program's components and"
  },
  {
    "commit_message": "Better placement of popup menu\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "2599e2290da6b36b7801bc4d57f6785e78d6d09d",
    "commit_timestamp": 1706228368,
    "code_diff": "",
    "code_summary": "The code diff changes the position of the popup menu in the _showMenu function. Previously, the menu was centered horizontally and offset from the top by 40 pixels. After the changes, the menu is still centered horizontally, but it is no longer offset from the top. Additionally, the centering calculation has been adjusted to use a quarter of the device's width rather than half. This likely results in the menu being positioned closer to the center of the screen."
  },
  {
    "commit_message": "Fixed bug where blocks were being create twice.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "e4e51a7224c2c515a29db089d8035505cf015a80",
    "commit_timestamp": 1706151756,
    "code_diff": "",
    "code_summary": "The code diff adds a new argument `batch_size` to the function `get_mongo_documents_by_date`, and changes the function `convert_to_datetime` to simply return the converted datetime instead of printing it. It also removes a line of code calling `createBlock` in the `addString` function of the `Thread` class. These changes do not seem to be related to each other and may have been made by different developers, implying that they are unrelated."
  },
  {
    "commit_message": "Finally, we have a decent option to show command popup menu.\nNow find the weird bug where a block is being show twice.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "cba293090b2e69c1232a43d7aa6dded49ea71398",
    "commit_timestamp": 1706139397,
    "code_diff": "",
    "code_summary": "This code diff accomplishes several things:\n\n1. It imports two libraries `flutter_context_menu.dart` and `riverpod_annotation/riverpod_annotation.dart`.\n2. It removes the generated file `frontend/lib/screens/commandbox.g.dart`.\n3. It adds the `PopupMenuItem` enum, which creates a list of commands.\n4. It adds a new function `_showMenu` which shows the command menu and handles the selected item.\n5. It removes the `CommandMenuVisibility` class and the related `commandMenuVisibilityProvider`.\n6. It adds the function `do_some_action` which executes a command.\n7. It adds a `RawKeyboardListener` which captures keypress events and displays the command menu.\n8. It"
  },
  {
    "commit_message": "Ok, so we have a popup menu using listbuilder.\nI don't like it because:\n1. can't select a default item (need to implement another logic)\n2. After selecting an option, the UI goes to previous screen (not sure why)\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "bb4e62c65869bc565c30c17e8350acc718d57489",
    "commit_timestamp": 1706135224,
    "code_diff": "",
    "code_summary": "This code diff accomplishes several things:\n\n1. Imports `flutter_context_menu` for use in `commandbox.dart`.\n2. Adds a `_showPopupMenu` function that creates a menu of `PopupMenuItem`s using `showMenu`.\n3. Adds a `do_some_action` function that handles some action to take based on a selected `String` from the menu.\n4. Changes the `buildCommandPopUp` function to use a `ListView.builder` instead of a `PopupMenuButton` to display the list of commands.\n5. Adds a `Visibility` widget wrapped around the menu, that shows or hides the menu based on the value of `visible`.\n6. Updates the `visible` variable in `buildCommandPopUp` to"
  },
  {
    "commit_message": "getting there using Stack. But don't want to show\npopupmenubutton. Replace it with some other widget\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "3630c15cf2af82c30dadd501a749266763d2df42",
    "commit_timestamp": 1706124298,
    "code_diff": "",
    "code_summary": "This code diff adds a few features to the `CommandBox` widget:\n\n1. In the imports, it adds `package:riverpod_annotation/riverpod_annotation.dart`. This package is used to generate a `Provider` that can be used to manage the visibility of the command menu.\n2. It adds a `part` directive to point to a new file called `commandbox.g.dart`. This file will be generated automatically based on the `@riverpod` annotations in the `CommandBox` class.\n3. It adds a `Commands` enum with a list of available commands.\n4. It adds a `commandList` variable which is a list of `String` values that correspond to the enum values.\n5. It adds"
  },
  {
    "commit_message": "Intermediate commit. A bottomModal slider to show\ncommand pop-up. Not exactly what I want, but it's a start.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "e5dbd9ef1000903253186fb9cba52c1840f08637",
    "commit_timestamp": 1706119743,
    "code_diff": "",
    "code_summary": "The code diff refactors how commands are handled in the CommandBox widget. The following changes are made:\n- Refactor the method for handling onChanged events when typing in the input box.\n  - A new parameter `text` is added to the method.\n  - If the `text` is not empty and starts with '/', show a popup instead of treating it as normal text.\n- Add a new `showModalBottomSheet` method inside the `onChanged` method.\n  - Creates a bottom sheet with a `PopupMenuButton` as its child, allowing the user to select an option.\n  - The `onSelected` event is set to print the selected value.\n- Add commented-out code for handling the positioning of the bottom sheet."
  },
  {
    "commit_message": "removed custom _showMenu() function. Just use\nbuilt-in showMenu() function.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "05c72c53a60c20a25a224694fc7b9999f9aa6c75",
    "commit_timestamp": 1706066695,
    "code_diff": "",
    "code_summary": "This code diff changes the way that a popup menu is displayed in the \"CommandBox\" widget. Instead of using the `_showPopupMenu` function, it directly uses the Flutter `showMenu` function to display the popup. It also defines a new `popupMenuEntryList` variable which is used as the `items` argument in the `showMenu` function, instead of defining the `items` argument inline."
  },
  {
    "commit_message": "return the selected command\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "0dfe3f4106a696c319f37ed406bcbf18938a7cc6",
    "commit_timestamp": 1706064931,
    "code_diff": "",
    "code_summary": "The following code diff allows the user to select a command from a pop-up menu when typing a \"/\" character before their text input. The pop-up is displayed when the input is not empty and the first character is a \"/\", and it shows a list of available commands to the user. The selected command is then handled separately, while the \"/\" character is removed from the input."
  },
  {
    "commit_message": "A simple menu for the commands. Shows up in the\nwrong place on the screen.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "e704ec75cc5a70c84ed0a7c57534852798477a84",
    "commit_timestamp": 1706064444,
    "code_diff": "",
    "code_summary": "The code diff adds the `AlphanumericWord` and `Commands` classes and the `commandList` variable to the `commandbox.dart` file. It also adds a function `_showPopupMenu` to display a popup menu with a list of available commands when the user types `/` followed by a partial command. This function is then called in the `onChanged` callback of the `TextField` to handle the logic for executing a specific command."
  },
  {
    "commit_message": "Created Block and Thread Notifiers to seperate\nscreens from the state. Now blocks and threads\ncan be used by any other screen.\nAlso created a new widget called CommandBox that\ncan be used in any screen.\nSo journal is nothing but a screen that uses command box widget.\nTODO: similarly we can create a thread widget that is invoked by other\nscreens.\nTODO: Ensure thread is not initialized by blocks_date by default.\nInitialization should be done by the screen that uses it.\nA screen might simply say, give me all the blocks by a user,\nirrespective by dates.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "7007a95e1c1a798bd3972621b6f5dffc092d1062",
    "commit_timestamp": 1706035844,
    "code_diff": "",
    "code_summary": ""
  },
  {
    "commit_message": "Now the blocks are printed in the correct order and the timestamp in the backend is synced to the frontend\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "9c76635fbd92f074abe1d1374b8a89122cb0669d",
    "commit_timestamp": 1705863971,
    "code_diff": "",
    "code_summary": "This code diff is making changes to three different files: b/backend/fastapi/routes/blocks/models.py, b/frontend/lib/screens/journal.dart, and b/frontend/openapi/lib/src/api/blocks_api.dart.\n\nIn b/backend/fastapi/routes/blocks/models.py, the code is changing the default value for the \"created_at\" field from utcnow to now.\n\nIn b/frontend/lib/screens/journal.dart, the code is making changes to the \"initialize\" and \"blocks_date\" functions. The \"initialize\" function is being changed to reverse the order of the strings in the \"stringBlocks\" list, and the \"blocks_date\" function is being changed to take in a DateTime parameter and use that instead of the current date.\n\nIn"
  },
  {
    "commit_message": "able to fetch the blocks data from backend for a\nspecific date. The data is then displayed in a list view.\nTODO: Reverse the order of the list view so that the most recent\nblock is at the top of the list. Also see why newest blocks are\nnot being fetched. Only 6 blocks are fetched and displayed.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "33b05fb739e505c74173e9b2a93dfd5b3fa716a7",
    "commit_timestamp": 1705820816,
    "code_diff": "",
    "code_summary": "This code edits the types of the providers in `journal.dart` and also modifies the way `JournalText` is declared/used. Specifically, it replaces `AutoDisposeNotifierProvider` with `AutoDisposeAsyncNotifierProvider` and replaces `AutoDisposeFutureProvider` with `AutoDisposeAsyncFutureProvider`. It also adds `--git` flags to the file paths to indicate that Git should be used to track changes to these files. These changes may have been made in an effort to improve performance or to make the code more consistent. The inclusion of `diff` in the code suggests that these changes were made in the context of a code diffing or version control tool."
  },
  {
    "commit_message": "Now the frontend is able to receive all the blocks\nfor a given date from the backend\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "15436fca3a5b1d9d8d0e6e3f689b5d106238a839",
    "commit_timestamp": 1705716185,
    "code_diff": "",
    "code_summary": "The code diff implements changes to two different blocks of code, one in the backend and one in the frontend.\n\nThe changes in the backend code are as follows:\n\n- Lines 43-49: Adds a comment and makes some formatting changes. \n- Lines 52-56: Adds a comment and sets the start and end dates for the query. \n- Lines 59-61: Adds a query to the database, specifying the \"created_at\" field as the date to search for. \n- Lines 64-68: Converts the cursor to a list of dictionaries. \n- Lines 72-80: Changes the return statement to convert the list of dictionaries to JSON and return it in a response. \n- Lines 89-"
  },
  {
    "commit_message": "Finally, able to query the blocks by date.\nTODO: clean up the code and make this available in the UI.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "3b625c51eeaefdcb720eaf89acf4aee89c0213da",
    "commit_timestamp": 1705703111,
    "code_diff": "",
    "code_summary": "async def get_blocks_by_date(date: dt.datetime, collection):\n+    docs = []\n+    async for doc in collection.find({\"created_at\": {\"$gte\": date.to, \"$lt\": date.to}}):\n         docs.append(doc)\n     return docs\n```\n\nThis code diff accomplishes the following:\n\n1. Renames the `GET /block/blocks` endpoint to `GET /block/all_blocks`.\n2. Creates a new `GET /blocks` endpoint to get all blocks for a given date. This endpoint takes in a `Date` object as a parameter and returns a `BlockCollection` model.\n3. Modifies the `BlockCollection` model to include a `created_at` field, which will be set to the"
  },
  {
    "commit_message": "added infinitescrollinglistview util. Need to test\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "7d8f02c2b627c850136177a9726a50688b55fbd6",
    "commit_timestamp": 1705543287,
    "code_diff": "",
    "code_summary": "The code diff adds a new file called \"infinitescrollinglistview.dart\" to the frontend/lib/utils directory. It also adds a new StatefulWidget called \"InfiniteScrollingListView\" with internal state. The state contains a ScrollController, a List of integers, and a boolean called _isLoading. It also adds an initState() method to initialize the ScrollController, and a dispose() method to dispose of the controller when the widget is no longer needed. There is also a _scrollListener() method to listen for when the user reaches the end of the list and trigger the loading of more data. Inside the _loadMoreData() method, more data is generated and added to the existing list, and the _isLoading boolean is set to"
  },
  {
    "commit_message": "Removed hardcoded text while saving a block of text\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "b76ea3f10cafeb6e3199d86b33f47a815d5c82e3",
    "commit_timestamp": 1705371964,
    "code_diff": "",
    "code_summary": "This code diff updates the `createBlock()` function in the `frontend/lib/screens/journal.dart` file. It changes how the `content` parameter is passed to the `BlockModel()` constructor by using the `text` variable instead of hard-coding it. It also removes unnecessary code related to parsing a `JsonObject`. Additionally, it adds an `await` keyword before calling the `createBlockBlockBlocksPost()` function, indicating that this function should wait for the `NetworkManager` instance to finish its operation before proceeding. Overall, these changes improve the efficiency and readability of the `createBlock()` function."
  },
  {
    "commit_message": "Added functionality to store block of text in mongodb\nat the backend.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "2901f97b97e798a1c51801e5028a629ea1c652be",
    "commit_timestamp": 1705369194,
    "code_diff": "",
    "code_summary": "This code diff shows the changes made to the code or file as it is compared with a previous version. It specifically shows the changes made to .DS_Store, regenerate_api.sh, routers.py, journal.dart, journal.g.dart, FILES, README.md, doc/BlockCollection.md, doc/BlockModel.md, doc/BlocksApi.md, doc/DefaultApi.md, doc/HTTPValidationError.md, doc/TaskModel.md, doc/TasksApi.md, doc/UpdateBlockModel.md, doc/UpdateTaskModel.md, and analysis_options.yaml files. \n\n- It removes the line `r'08547b972a20dc995ba811c697cad8854e4e8102'` and adds `r'"
  },
  {
    "commit_message": "Made the text display of blocks copyable\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "121dbdd0d608fc9b4fe0e586a05d7afac14cf2f4",
    "commit_timestamp": 1705183405,
    "code_diff": "",
    "code_summary": "The code diff changes the child of the Container widget from a regular Text widget to a SelectableText widget. Additionally, the softWrap parameter is commented out, which means that the text will no longer automatically wrap to the next line if it exceeds the Container's width."
  },
  {
    "commit_message": "Created new data model called BlockModel. This will store\nall blocks of texts entered by the user. Artifacts such as a message,\ntask, or event will be stored as a block. Thread could be a series of block.\nLater there can be operations on the block. Blocks could have relationships.\nThere can be structured data extracted out of blocks.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "4d6717d65f24fe50aa18bb902866d681a2f8daf9",
    "commit_timestamp": 1705182087,
    "code_diff": "",
    "code_summary": "populate_by_name = True\n+    )\n+\n+    model_config = ConfigDict(extra='ignore',\n+      ```          arbitrary_types_allowed = True\n+    )\n+    model_config = ConfigDict(extra='ignore',\n+      ```          json_schema_extra = {\n+      ```            \"example\": {\n+      ```                \"name\": \"An informative task title\",\n+      ```                \"goal\": \"Why are we doing it?\",\n+      ```                \"completed\": True,\n+      ```            }\n+      ```        }   \ndiff --git a/backend/fastapi/routes/tasks/routers.py b/backend/fastapi/routes/tasks/routers.py\nindex 87a917a..01a1f8d 100644\n---"
  },
  {
    "commit_message": "emoji support - try with :smile: or :rocket:\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "b800d6224adcc7f73d194805d057e122a9f5ceb0",
    "commit_timestamp": 1705013966,
    "code_diff": "",
    "code_summary": "Changes the font style to a bold NotoEmoji font at the setted fontSize of 15 in the JournalScreen class in the journal.dart file."
  },
  {
    "commit_message": "Added Padding below input textfield\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "d51851c73244fd59ef4b11c78c73f1a66e86d11e",
    "commit_timestamp": 1704943512,
    "code_diff": "",
    "code_summary": "This code diff adds 30 pixel padding to the bottom of the journal screen."
  },
  {
    "commit_message": "Made widgets colorful\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "50035a45cef4e3d2bf3f58a9d118f81380924799",
    "commit_timestamp": 1704943381,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following changes in the \"journal.dart\" file:\n\n1. Removes the \"alignment\" property from the \"blockDisplay\" widget.\n\n2. Removes the comment and color property from the \"blockDisplay\" widget.\n\n3. Changes the \"color\" property of the \"BoxDecoration\" in the \"blockDisplay\" widget to be based on the primaryContainer color from the theme.\n\n4. Removes the \"color\" property from the \"border\" in the \"BoxDecoration\" of the \"blockDisplay\" widget.\n\n5. Removes the \"color\" property from the \"border\" in the \"BoxDecoration\" of the \"messagesContainer\" widget.\n\n6. Adds the \"filled\" and \"fillColor\" properties to"
  },
  {
    "commit_message": "Aligned the widgets to the center\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "3f1a27d06624dfc49f14d73180394417b0a0acb4",
    "commit_timestamp": 1704942767,
    "code_diff": "",
    "code_summary": "The code diff changes the alignment of the body from a \"mainAxisAlignment\" of \"start\" in the original code to an explicit \"alignment\" of \"center\" in the modified code. It also adds a comment on line 86 and modifies the indentation of the code on lines 86-97."
  },
  {
    "commit_message": "Decreased the size of the journal entry text fields\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "d4ae0547cba987746b9e19d0cccb62ac9e9dc2a9",
    "commit_timestamp": 1704942387,
    "code_diff": "",
    "code_summary": "The code diff modifies the `JournalScreen` class by adding a `containerWidth` variable, and adjusting the width and alignment properties for `blockDisplay` and `blockInput` widgets. This allows for better display of journal blocks on wider screens, and ensures that the input field is also properly aligned."
  },
  {
    "commit_message": "added border to the input field and made the box bigger\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "8caff1ef0adcfe0d04eca931cace21b886e619b3",
    "commit_timestamp": 1704941430,
    "code_diff": "",
    "code_summary": "This code diff affects the code in the file \"journal.dart\" by changing the text field properties. Specifically, the code changes the maximum and minimum number of lines that can be entered in the text field, and adds an outline border to the text field. This could potentially change the appearance and functionality of the text field in the app."
  },
  {
    "commit_message": "Now the list items can be scrolled in reverse order!!\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "2d7ad5c4d49c89b8f1dc67e1364dbccaa9a0547e",
    "commit_timestamp": 1704934172,
    "code_diff": "",
    "code_summary": "This code diff makes the following changes to the `JournalText` and `JournalScreen` classes:\n- On lines 17 and 55, it changes the state variable from `[...state, input]` to `[input, ...state]`. This means that the `JournalText` widget will now add new strings to the beginning of the list instead of the end.\n- On line 59, it adds the `reverse: true` property to the `ListView.builder` widget. This means that the list will now be displayed in reverse order; the first item will be at the bottom and the last item will be at the top.\n- On line 61, it changes the `color` property of the `decoration` for"
  },
  {
    "commit_message": "Modified the journal screen to display the journal entries in a list view.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "e61af04f445eb0fa0118c814c462cd4eb324f818",
    "commit_timestamp": 1704929385,
    "code_diff": "",
    "code_summary": "The code diff modifies the `MyApp` class in `main.dart` to add a new route, `JournalScreen`, to the app. It also defines a new `JournalText` provider which manages the content of a journal entry. Further, it updates the `JournalScreen` class to use the `JournalText` provider to display and update journal entries. Finally, the diff adds some dependencies to the `pubspec.yaml` file, including `emoji_picker_flutter` and `flutter_emoji`, which are used in the `JournalScreen` class to display emojis in the journal entry."
  },
  {
    "commit_message": "New journal screen that allows users to create a new journal entry.\nThe journal entry is then saved to the state variable using riverpod.\nEventually the entry will be saved to the database.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "4643ae0abe93d75d393560b4421749ba77719cc7",
    "commit_timestamp": 1704868614,
    "code_diff": "",
    "code_summary": ""
  },
  {
    "commit_message": "Added theme colors and fonts to the app.\nAlso start to use riverpod for the state management.\nHome screen is a stateful widget. Make other widgets stateless.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "1f860831200ff35a6461eeaa47975761b8c54fed",
    "commit_timestamp": 1704847700,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following:\n\n1. In `constants.dart`, it declares an enum class `ColorSeed` which contains a list of color names and their corresponding hexadecimal value.\n2. In `main.dart`, it imports the `flutter_riverpod` package and calls `ProviderScope` on `MyApp` to allow access to state.\n3. In `main.dart`, it modifies the `MaterialApp` by setting the app's title to \"Monk\", removing the debug banner, and setting the app's theme to dark mode.\n4. In `main.dart`, it creates a new `theme` property for the `MaterialApp` and sets its `colorSchemeSeed` to the previously declared `ColorSeed` value"
  },
  {
    "commit_message": "Protect all the backend APIs with the session.\nTested that if the user is logged out, the backend APIs will return 401\n(unauthorized)\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "6972accc782008f6521af2a95e990e7947b82d36",
    "commit_timestamp": 1704843497,
    "code_diff": "",
    "code_summary": ""
  },
  {
    "commit_message": "Fully tested that the session verification works for get_tasks.\nAdditionally, the data model for response is now also indicated.\nThis helps the frontend to know what to expect in terms of receiving\ndata.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "08e5eb4904bb3201169a8f96c61e018222c55aa9",
    "commit_timestamp": 1704781531,
    "code_diff": "",
    "code_summary": "This code diff changes the response model for the `/` endpoint in the `/tasks` path in the backend's OpenAPI schema from an empty object `{}` to a list of `TaskModel` objects. In addition, it modifies the `UpdateTaskModel` in the backend to use `SkipJsonSchema` to indicate that the optional fields should be skipped in the schema generation. \n\nIt also adds a `session` parameter to the `list_tasks` function in the backend, indicating that the endpoint requires a session to be accessed. Finally, it modifies the frontend's OpenAPI schema to use `BuiltList<TaskModel>` instead of `JsonObject` as the return type for the `listTasksTaskGet` method."
  },
  {
    "commit_message": "added support for automatically generating openapi compatible .yaml file in the backend and associated dart api/model for the frontend. Everything works. Careful while writing pydantic model, so that 'null' type is not generated in openapi.yaml for optional parameters.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "079bad3321226d9712b2019d739cd1cdb37ea667",
    "commit_timestamp": 1704778037,
    "code_diff": "",
    "code_summary": "3711dbf..0ebeb44 100644\n--- a/frontend/openapi/doc/DefaultApi.md\n+++ b/frontend/openapi/doc/DefaultApi.md\n@@ -1,8 +1,360 @@\n # DefaultApi\n\n+## Methods\n\n+### secureApiSessioninfoGet\n\n-## Methods\n\n-### secureApiSessioninfoGet\n\n-> No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n\n+Secure Api\n\n-## DefaultApi\n\n+> No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n\n-Class | Method | HTTP request | Description\n------------- | ------------- | ------------- | -------------\n-[*DefaultApi"
  },
  {
    "commit_message": "Able to use generated Task API in frontend.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "d4630899fe566b4c614b2df7880c51d78a163ac7",
    "commit_timestamp": 1704759431,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following changes in the specified files:\n- b/backend/fastapi/routes/tasks/models.py\n1) Line 10 - The `id` field is renamed to `_id`, with an alias given as `_id`. This is done to reflect the name used by mongodb, which is where this class is used.\n2) Line 13 - The `completed` field has a default value of `False`.\n3) Lines 15-17 - The `Config` class is changed to have `populate_by_name` set to `True`, which means that the field names will be populated by name rather than by alias.\n4) Lines 27-29 - The `UpdateTaskModel` class is changed to have an"
  },
  {
    "commit_message": "Able to fetch session info from the backend\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "d2528e50a107d9a00e36e42c2bf615bc07ae637e",
    "commit_timestamp": 1704603691,
    "code_diff": "",
    "code_summary": "the code diff adds an API to get session information (including session handle, user ID, and access token payload), a middleware with CORSMiddleware, and dependencies for the FastAPI project. It also removes a previous API for logging in with Github and some commented code for logging in with Apple."
  },
  {
    "commit_message": "Use smalller icon for google sign in\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "1335dad7f436f85e136c41866db989c033623883",
    "commit_timestamp": 1704574094,
    "code_diff": "",
    "code_summary": "This code diff accomplishes 4 things:\n\n1. It adds \".DS_Store\" to the list of files to ignore in `.gitignore`.\n\n2. It adds a new file called \"signin_with_google_large.png\" to the project's \"frontend/assets\" directory.\n\n3. It renames the file \"google_signin_logo.png\" in \"frontend/lib/images\" to \"signin_with_google_small.png\" in \"frontend/assets\".\n\n4. It changes the reference to the \"google_signin_logo.png\" file in the \"frontend/lib/screens/login.dart\" file to the new \"assets/signin_with_google_small.png\" file, and removes the width property for the image. It also creates a new assets section in the \"frontend/pub"
  },
  {
    "commit_message": "Added sign in with google button\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "be791c6ba423c0de55e1ef7dd93ec29fa4277ab0",
    "commit_timestamp": 1704573266,
    "code_diff": "",
    "code_summary": "The code diff updates the login screen in the frontend of the application by adding a new file, \"google_signin_logo.png\", and replacing the \"Continue with Google\" text button with an icon button that displays the new image. It also adds the new image to the list of assets in the pubspec.yaml file for the application. The diff also removes the code for a \"Continue with Github\" button and the code for a \"Continue with Apple\" button for iOS devices (which is currently commented out)."
  },
  {
    "commit_message": "Finally got Google Auth Flow working!!!\n\nI had to keep track of so many thing:\n- Google Auth Flow\n- Creating client IDs for frontend and backend\n- Correct settings in apple xcode info.plist\n- proper redirect URI\n- proper entitlements in apple developer console\n- adding developer certificates to apple keychain\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "bb7620647e192e2adc5b7f3927a92baa10efa418",
    "commit_timestamp": 1704561375,
    "code_diff": "",
    "code_summary": "The following code diff:\n\n- updates the Google client ID and client secret fields with new values for the Google client registered in the Monkrasia Google API project.\n- adds configurations for the Github and Apple third-party providers, including their respective client IDs and secrets.\n- imports the necessary modules (e.g. `provider` and `thirdparty`) to set up these third-party providers.\n- initializes the `thirdparty` features in the `framework` (in this case, FastAPI).\n- removes the `plus` scope from Google sign-in.\n- updates the back-end and front-end Google client IDs with the appropriate values.\n- adds an additional check to ensure that the Google server auth code is not null before proceeding with the sign-in"
  },
  {
    "commit_message": "fixed issues where GoogleLogin does not give back token. Now need to fix the backend.\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "f739128ec6f5fcf0b1ae7c53f08e121d83a010b5",
    "commit_timestamp": 1704559689,
    "code_diff": "",
    "code_summary": "This code diff makes several changes to the login screen and MacOS Runner project:\n\n1. Replaces the Google client ID with a new one.\n2. Sets a new backend client ID for the Google sign-in.\n3. Adds a print statement to output the new Google client ID.\n4. Changes the code sign identity to \"Apple Development\" and the code sign style to automatic for the MacOS Runner project.\n5. Adds support for the macosx platform and disables support for the Mac Catalyst.\n6. Adds two key-value pairs to the DebugProfile.entitlements file: a keychain access group for the Google sign-in and a sandbox entitlement.\n7. Changes the CFBundleURLSchemes in the Info.plist file to the new Google"
  },
  {
    "commit_message": "changed client ID - auth still does not complete\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "b6e5d468c81935a107385c1eca7f1b7f493eba0c",
    "commit_timestamp": 1704527248,
    "code_diff": "",
    "code_summary": "This code diff updates the CLIENT_ID and CLIENT_SECRET values in the `CommonSettings` class used for authentication in FastAPI and Flutter during login."
  },
  {
    "commit_message": "Google Auth frontend changes - still does not work, ui is launched but google auth does not work\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "bae484b7cbcab53b78e458c141fbf86b41820e21",
    "commit_timestamp": 1704507194,
    "code_diff": "",
    "code_summary": "The following code does the following:\n\n1. Creates a `.DS_Store` file in the `backend/fastapi/config` directory.\n2. Creates a new file since the mode is set to 100644.\n3. Indexes two binary files (no changes are shown using `Binary files /dev/null and b/.DS_Store differ`).\n4. Adds the `sign_in_and_up_feature` of `thirdparty` with the providers: `google`, `github`, and `apple`.\n5. Changes the `apiDomain` to `http://0.0.0.0:8000` in the `constants.dart` file.\n6. Changes the `clientId` and `serverClientId` in the `googleSignIn`"
  },
  {
    "commit_message": "added basic scheme for google auth. Doesn't work yet\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "50f054aef68ed8577cb84717bc1efa09f1762792",
    "commit_timestamp": 1704490641,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following:\n1. Creates a new file frontend/.gitignore, which specifies which files and directories should be ignored by Git.\n2. Creates a new file frontend/.metadata, which tracks properties of the Flutter project.\n3. Creates a new file frontend/README.md, which provides information and instructions for the project.\n4. Creates a new file frontend/analysis_options.yaml, which configures the static analyzer for the project.\n5. Creates a new file frontend/lib/constants.dart, which defines a constant variable for the API domain.\n6. Creates a new file frontend/lib/main.dart, which contains the main function of the project and defines the MyApp widget for the app.\n7. Creates a new file frontend/lib/network"
  },
  {
    "commit_message": "add userroles\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "0e6fee24480d9225c14395ee4e760925b5618605",
    "commit_timestamp": 1704437387,
    "code_diff": "",
    "code_summary": "The code diff is adding a new configuration option for user roles in the fastapi package. It is importing the module `userroles`, which includes functionality for managing user roles, and adding it to the list of configuration options for the fastapi package."
  },
  {
    "commit_message": "added user management dashboard via awesome supertokens. available at http://localhost:8000/auth/dashboard\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "8956809e3c9b06c8ef2696c10bff443c72ecb73d",
    "commit_timestamp": 1704436417,
    "code_diff": "",
    "code_summary": "The code change adds support for Supertokens in the Monk application. \n- The `diff` in `__init__.py` introduces new packages, namely `supertokens_python`, and other recipes needed to initialize Supertokens in the Monk application.\n- The `diff` in `main.py` adds Supertokens middleware to the FastAPI application, allowing for Supertokens to handle authentication and authorization.\n- The `diff` in `requirements.in` and `requirements.txt` adds new dependencies needed for Supertokens, such as `supertokens-python` and `pip-tools`."
  },
  {
    "commit_message": "A simple fastapi backend to create tasks in a local mongodb community edition cluster\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "718a3c6e4d451b5e030a08c3bed161f52bcfceef",
    "commit_timestamp": 1704422743,
    "code_diff": "",
    "code_summary": "The code diff adds and edits multiple files in the project, specifically:\n\n- Changes the contents of `.gitignore` to ignore every environment file (`**/.env`), folder containing environment files (`**/env/`), Python cache (`**/__pycache__/`), and version of Python used (`**/.python-version`).\n- Changes the description of a task (in `README.md`) to remove an outdated TODO item and instead propose using a Docker container.\n- Adds code to define settings for the FastAPI server, a MongoDB database, and the application in general (`backend/fastapi/config/__init__.py`).\n- Adds code to run the FastAPI server (`backend/fastapi/main.py`), along with the server's dependencies"
  },
  {
    "commit_message": "Added supertokens docker-compose. This allows us to create a supertokens service and corresponding postgres db. Both of this can be used later for user management and authentication\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "05ca4ee08aae5ac926a8b8bec5f982e385aee0c0",
    "commit_timestamp": 1704412403,
    "code_diff": "",
    "code_summary": "The code diff accomplishes the following:\n\n1. Creates a new .gitignore file and lists \"supertokens/.env\" as a file to ignore.\n2. Creates a new docker-compose.yaml file for the supertokens service, which sets up a Postgres database container.\n3. Specifies the environment variables for the Postgres container, including the username and password for the supertokens_user.\n4. Maps the ports for the database and supertokens services.\n5. Creates a healthcheck for the database and supertokens containers.\n6. Creates a network for the containers to communicate with each other."
  },
  {
    "commit_message": "added MongoDB info in README\n",
    "committer_name": "yksoni-transcendtech",
    "commit_id": "6c59495fd70c962f76139c028b109835d07e72f8",
    "commit_timestamp": 1704325753,
    "code_diff": "",
    "code_summary": "This code diff accomplishes the following:\n- It shows that there was a change made to the README.md file.\n- It shows the index of the previous and current versions of the file, indicating the specific lines that were changed.\n- It shows that there was 1 line added (+1) and 9 lines removed (-9).\n- It shows the previous version of the file with the line \\ No newline at end of file, indicating that there was no newline at the end of the file.\n- It shows the updated version of the file, which includes a comment about needing to install MongoDB on a docker container, as well as environment variable definitions for debugging mode, the database URL, and the database name."
  },
  {
    "commit_message": "Initial commit",
    "committer_name": "GitHub",
    "commit_id": "3a66b73bbff549dbf0ac6f7cac693fb08dc0ff33",
    "commit_timestamp": 1703734711,
    "code_diff": "",
    "code_summary": "It accomplishes comparing and showing differences between two versions of code or two separate files."
  }
]