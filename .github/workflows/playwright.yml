name: Playwright Test Suite

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'
  
jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Create .env file
      run: |
        cat > .env << 'EOF'
        HCP_ORG_ID=${{ secrets.HCP_ORG_ID }}
        HCP_PROJECT_ID=${{ secrets.HCP_PROJECT_ID }}
        HCP_CLIENT_ID=${{ secrets.HCP_CLIENT_ID }}
        HCP_CLIENT_SECRET=${{ secrets.HCP_CLIENT_SECRET }}
        HCP_PROJECT_NAME=${{ secrets.HCP_PROJECT_NAME }}
        BASE_URL=0.0.0.0
        FASTAPI_PORT=8001
        WEBSITE_DOMAIN=https://localhost
        INSTALL_DOMAIN=https://localhost
        API_DOMAIN=https://localhost
        
        VITE_API_DOMAIN=https://localhost
        VITE_WEBSITE_DOMAIN=https://localhost
        VITE_SUPERTOKENS_API_BASE_PATH=/api/auth
        VITE_SUPERTOKENS_WEBSITE_BASE_PATH=/auth
        VITE_SUPERTOKENS_APP_NAME=Monk
        VITE_API_BASE=/api
        TEST_GOOGLE_USERNAME=${{ secrets.TEST_GOOGLE_USERNAME }}
        TEST_GOOGLE_PASSWORD=${{ secrets.TEST_GOOGLE_PASSWORD }}
        EOF

    - name: Start services with docker-compose
      run: |
        docker compose up --build -d
        echo "Waiting for services to start..."
        sleep 30

    - name: Check services status
      run: |
        docker compose ps
        echo "Checking Nginx..."
        curl -k https://localhost/health || echo "Health check failed"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install frontend dependencies
      run: pnpm install

    - name: Install Playwright browsers
      run: pnpm exec playwright install chromium

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest playwright pytest-asyncio
        playwright install

    - name: Do Auth Setup
      run: |
        PLAYWRIGHT_SKIP_BROWSER_HTTPS_ERRORS=1 \
        WEBSITE_DOMAIN="https://nginx" \
        pnpm run test:auth

    - name: Run backend tests
      run: |
        # TypeScript tests
        PLAYWRIGHT_SKIP_BROWSER_HTTPS_ERRORS=1 \
        API_DOMAIN="https://nginx/api" pnpm run test:backend
        
        # Python tests
        #API_DOMAIN="https://localhost/api" \
        #PYTHONPATH=$PYTHONPATH:./backend/api \
        #pytest ./backend/api/tests/test_unauthorized_access.py -v --verify=false

    - name: Run frontend tests
      run: |
        PLAYWRIGHT_SKIP_BROWSER_HTTPS_ERRORS=1 \
        WEBSITE_DOMAIN="https://localhost" pnpm run test:frontend

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-results
        path: playwright-report/

    - name: Cleanup
      if: always()
      run: |
        docker compose down -v
