name: Playwright Test Suite

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  pull_request:
    branches: [main]

# Environment variables at workflow level (static values only)
env:
  API_PORT: '8001'  # Explicit string declaration
  CONTAINER_NAME: monk_backend_container
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    # Job-level environment (derived values)
    env:
      API_DOMAIN: http://127.0.0.1:${{ vars.API_PORT }}  # Use vars context for workflow vars
      PLAYWRIGHT_VERSION: '1.42.0'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python dependencies
      run: |
        pip install playwright==${{ env.PLAYWRIGHT_VERSION }}
        playwright install chromium

    - name: Build Docker image
      run: docker build -t monk_backend ./backend/api

    - name: Run Docker container
      run: |
        docker run -d \
          -p ${API_PORT}:8001 \  # Direct environment variable access
          -e API_DOMAIN=${API_DOMAIN} \
          -e HCP_CLIENT_ID=${{ secrets.HCP_CLIENT_ID }} \
          -e HCP_CLIENT_SECRET=${{ secrets.HCP_CLIENT_SECRET }} \
          -e HCP_ORG_ID=${{ secrets.HCP_ORG_ID }} \
          -e HCP_PROJECT_ID=${{ secrets.HCP_PROJECT_ID }} \
          -e HCP_PROJECT_NAME=${{ secrets.HCP_PROJECT_NAME }} \
          --name ${CONTAINER_NAME} \
          monk_backend

    - name: Validate container
      run: |
        echo "Using API port: ${API_PORT}"
        echo "Accessing domain: ${API_DOMAIN}"
        docker ps --filter "name=${CONTAINER_NAME}"

    - name: Run Playwright tests
      working-directory: .
      env:
        CI: true
      run: pnpm exec playwright test

    - name: Cleanup
      if: always()
      run: |
        docker stop ${CONTAINER_NAME} || true
        docker rm ${CONTAINER_NAME} || true
