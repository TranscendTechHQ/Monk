name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  API_PORT: 8001
  CONTAINER_NAME: monk_backend_container

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    env:
      API_DOMAIN: 'http://localhost:${{ env.API_PORT }}'  # Valid job-level reference

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest playwright
        playwright install chromium

    - name: Build Docker image
      run: docker build -t monk_backend ./backend/api

    - name: Run Docker container
      run: |
        docker run -d \
          -p ${{ env.API_PORT }}:8001 \
          -e API_DOMAIN=${{ env.API_DOMAIN }} \
          -e HCP_CLIENT_ID=${{ secrets.HCP_CLIENT_ID }} \
          -e HCP_CLIENT_SECRET=${{ secrets.HCP_CLIENT_SECRET }} \
          -e HCP_ORG_ID=${{ secrets.HCP_ORG_ID }} \
          -e HCP_PROJECT_ID=${{ secrets.HCP_PROJECT_ID }} \
          -e HCP_PROJECT_NAME=${{ secrets.HCP_PROJECT_NAME }} \
          --name ${{ env.CONTAINER_NAME }} \
          monk_backend

    - name: Wait for API to be ready
      run: |
        for i in {1..10}; do
          if curl -s ${{ env.API_DOMAIN }}/health; then
            echo "API is ready!"
            exit 0
          fi
          echo "Attempt $i: API not ready, waiting..."
          sleep 5
        done
        echo "API failed to start. Outputting container logs:"
        docker logs ${{ env.CONTAINER_NAME }}
        exit 1

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: pnpm install

    - name: Install Playwright browsers
      working-directory: ./frontend
      run: pnpm exec playwright install --with-deps

    - name: Run Python Playwright tests
      run: |
        PYTHONPATH=$PYTHONPATH:./backend/api \
        API_DOMAIN=${{ env.API_DOMAIN }} \
        pytest ./backend/api/tests/test_unauthorized_access.py -v

    - name: Run Node.js Playwright tests
      working-directory: ./frontend
      run: API_DOMAIN=${{ env.API_DOMAIN }} pnpm exec playwright test

    - name: Stop and remove container
      if: always()
      run: docker stop ${{ env.CONTAINER_NAME }} && docker rm ${{ env.CONTAINER_NAME }}

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
