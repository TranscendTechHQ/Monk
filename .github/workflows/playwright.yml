name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  API_PORT: 8001
  API_DOMAIN: http://localhost:8001

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    #services:
      # This redis service is just an example - remove if not needed
      #redis:
      #  image: redis
      #  ports:
      #    - 6379:6379
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Build Docker image
      run: docker build -t monk_backend ./backend/api

    - name: Run Docker container
      run: |
        docker run -d \
          -p ${{ env.API_PORT }}:${{ env.API_PORT }} \
          -e API_DOMAIN=${{ env.API_DOMAIN }} \
          -e HCP_CLIENT_ID=${{ secrets.HCP_CLIENT_ID }} \
          -e HCP_CLIENT_SECRET=${{ secrets.HCP_CLIENT_SECRET }} \
          -e HCP_ORG_ID=${{ secrets.HCP_ORG_ID }} \
          -e HCP_PROJECT_ID=${{ secrets.HCP_PROJECT_ID }} \
          -e HCP_PROJECT_NAME=${{ secrets.HCP_PROJECT_NAME }} \
          --name monk_backend_container \
          monk_backend

    - name: Wait for API to be ready
      run: |
        for i in {1..10}; do
          if curl -s ${{ env.API_DOMAIN }}/health; then
            echo "API is ready!"
            exit 0
          fi
          sleep 5
        done
        echo "API failed to start"
        exit 1

    - name: Install Playwright
      run: |
        python -m pip install --upgrade pip
        pip install pytest playwright
        playwright install chromium

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install

    - name: Install Playwright browsers
      run: pnpm exec playwright install --with-deps

    - name: Run Playwright tests
      run: |
        PYTHONPATH=$PYTHONPATH:./backend/api \
        API_DOMAIN=${{ env.API_DOMAIN }} \
        pytest ./backend/api/tests/test_unauthorized_access.py -v
        
        API_DOMAIN=${{ env.API_DOMAIN }} pnpm exec playwright test

    - name: Stop container
      if: always()
      run: docker stop monk_backend && docker rm monk_backend
